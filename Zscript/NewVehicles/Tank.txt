

Class TankTreads_01 : Actor
{
 States{
  Spawn:
  TNT1 A 0;
  TKT1 A 1; 
  stop;
  }
}
Class TankTreads_02 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 B 1; 
  stop;
  }
}
Class TankTreads_03 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 C 1; 
  stop;
  }
}
Class TankTreads_04 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 D 1; 
  stop;
  }
}
Class TankTreads_05 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 E 1; 
  stop;
  }
}
Class TankTreads_06 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 F 1; 
  stop;
  }
}
Class TankTreads_07 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 G 1; 
  stop;
  }
}
Class TankTreads_08 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 H 1; 
  stop;
  }
}
Class TankTreads_09 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 I 1; 
  stop;
  }
}
Class TankTreads_10 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 J 1; 
  stop;
  }
}
Class TankTreads_11 : Actor
{
 States{
  Spawn:
  TNT1 A 0;
  TKT1 K 1; 
  stop;
  }
}
Class TankTreads_12 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 L 1; 
  stop;
  }
}
Class TankTreads_13 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 M 1; 
  stop;
  }
}
Class TankTreads_14 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 N 1; 
  stop;
  }
}
Class TankTreads_15 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 O 1; 
  stop;
  }
}
Class TankTreads_16 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 P 1; 
  stop;
  }
}
Class TankTreads_17 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 Q 1; 
  stop;
  }
}
Class TankTreads_18 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 R 1; 
  stop;
  }
}
Class TankTreads_19 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 S 1; 
  stop;
  }
}
Class TankTreads_20 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 T 1; 
  stop;
  }
}
Class TankTreads_21 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 U 1; 
  stop;
  }
}
Class TankTreads_22 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 V 1; 
  stop;
  }
}
Class TankTreads_23 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 W 1; 
  stop;
  }
}
Class TankTreads_24 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 X 1; 
  stop;
  }
}
Class TankTreads_25 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 Y 1; 
  stop;
  }
}
Class TankTreads_26 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT1 Z 1; 
  stop;
  }
}
Class TankTreads_27 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT2 A 1; 
  stop;
  }
}
Class TankTreads_28 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT2 B 1; 
  stop;
  }
}
Class TankTreads_29 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT2 C 1; 
  stop;
  }
}
Class TankTreads_30 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT2 D 1; 
  stop;
  }
}
Class TankTreads_31 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT2 E 1; 
  stop;
  }
}
Class TankTreads_32 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT2 F 1; 
  stop;
  }
}
Class TankTreads_33 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT2 G 1; 
  stop;
  }
}
Class TankTreads_34 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT2 H 1; 
  stop;
  }
}
Class TankTreads_35 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  TKT2 I 1; 
  stop;
  }
}

///////////////////////////


Class TankHull : Actor
{
	Default
	{
	//+THRUACTORS;
	//+NOTIMEFREEZE;
	//+CLIENTSIDEONLY;
	+FLOORCLIP;
	+NOBLOCKMAP;
	+SOLID;
//	+INTERPOLATEANGLES;
	//Health 2000;
	+THRUSPECIES;
	+INTERPOLATEANGLES
	Species "Abrams";
	Mass 99999;
	Radius 73;
	Height 48;
	//Gravity 0;
	}
	
	States	
	{	
	Spawn:	
			TNT1 A 0;	
			TNKH A 1;			
	stop;	
	}
	
}

Class TankTurret: TankHull
{
States
{
Spawn:
TNT1 A 0;
TNT1 A 0 A_Stop;
TNT1 A 0 ;
TNKT A 1;
Stop;
}}

Class Tank: SwitchableDecoration
{
	int user_stationedtankbasedirection;
	default{
    Radius 79;
	Height 74;
	+SOLID;
	+USESPECIAL;
	MONSTER;
	+FRIENDLY;
	-COUNTKILL;
	+SHOOTABLE;
	+LOOKALLAROUND;
//	+THRUACTOR;
	+NOINFIGHTING;
	+NORADIUSDMG;
	-COUNTKILL;
	damagefactor "stomp", 0;
	damagefactor "Treads", 0.0;
	MaxTargetRange 120;
	PainChance "Repair", 255;
	BloodType "TankBlood", "TankBlood", "TankBlood";
	Activation THINGSPEC_Activate | THINGSPEC_ThingTargets | THINGSPEC_NoDeathSpecial;
	Mass 9999;
	Speed 0;
	health 1500;
	damagefactor "slime", 0.0;
	damagefactor "Repair", 1.0; damagefactor "CheckRepair", 0.0;
	damagefactor "Head", 0.0;	damagefactor "FriendBullet", 0.0;    damagefactor "Taunt", 0.0;    damagefactor "KillMe", 0.0;
	damagefactor "Shotgun", 0.0;    damagefactor "Shrapnel", 0.0;    damagefactor "Blood", 0.0;    damagefactor "BlueBlood", 0.0;
	damagefactor "Explosives", 0.5; damagefactor "bullet", 0.0; damagefactor "monsterbullet", 0.0; damagefactor "shotgun", 0; damagefactor "monstershotgun", 0.0; damagefactor "monsterminigun", 0.0;
	damagefactor "GreenBlood", 0.0;    damagefactor "MinorHead", 0.0;    damagefactor "Decaptate", 0.0;	damagefactor "MonsterKnocked", 0.0;
    damagefactor "CancelTeleportFog", 0.0;	damagefactor "BHFTOnBarrel", 0.0;	damagefactor "GibRemoving", 0.0;	damagefactor "SuperPunch", 0.0;
	damagefactor "HelperMarineFatallity", 0.0;	damagefactor "Leg", 0.0;	damagefactor "SpawnMarine", 0.0;	damagefactor "TeleportRemover", 0.0;
	damagefactor "CauseObjectsToSplash", 0.0; damagefactor "Trample", 0.0; damagefactor "Minigun", 0.1; damagefactor "Machinegun", 0.1;
	damagefactor "TankWeakSpot", 3.0;
	damagefactor "Plasma", 2.5; damagefactor "Plasma2", 2.5;
	damagefactor "Desintegrate", 3.0;
	damagefactor "Blast", 0.0;
	damagefactor "ExplosiveImpact", 0.5;
	damagefactor "Burn", 0.0;
	damagefactor "Arm", 0.0;
	damagefactor "SSG", 0.0;
	damagefactor "Head", 0.0;
	damagefactor "Cutless", 0.0;
//	damagefactor "None", 0.0;
	damagefactor "TankShell", 0.4;
	damagefactor "Explosive", 0.5;
	damagefactor "HeavyTankMachineGun", 0.0;
	}
	
	TankHull tha;
	
    States
    {
    Spawn:
		TNKH A 1;
		
	    TNT1 A 1 
		{
			tha = TankHull(Spawn("TankHull",pos));
		}
		TNT1 A 0 Thing_ChangeTID(0, 261);
		TNT1 A 0 ACS_ExecuteAlways(137, 0, 0, 0, 0);//Check vehicle initial angle.
		TNT1 A 1 A_ChangeFlag("FRIENDLY", 0);
		TNT1 A 0 A_SpawnItem("TankTurret");
		TNT1 A 0 Thing_ChangeTID(0, 0);
		TNKH A 0 A_ChangeFlag("THRUACTOR", 0);
		TNT1 A 0 A_ChangeFlag("FRIENDLY", 1);
				

		Goto StandingHere;
		
	  StandingHere:
		TNT1 A 0;
		TNT1 A 0 ACS_NamedExecuteAlways("Leaving Tank", 0, 0, 0, 0);//SpawnVehicleBase
		TNT1 A 1;
		TNT1 A 0 A_SpawnItem("TankTurret");
		TNT1 A 0 A_SpawnItem("TankHull");
		TNT1 A 0 A_SpawnItem("TankTreads_01");
		Loop;
		
    Active:
        TNT1 A 0 ;
        BRAD C 0 A_ChangeFlag("FRIENDLY", 0);
        //TNT1 A 0 A_Look
        TNT1 A 0 Thing_ChangeTID(0, 261);
        TNT1 A 0 ACS_ExecuteAlways(130, 0, 0, 0, 0);//Check Vehicle Health  
        //TNT1 A 0 A_Chase("","",CHF_DONTMOVE )
        TNT1 A 0 A_GiveToTarget("CheckingMorphingPlayerHealth", 1);
        TNT1 A 0 A_SpawnItem("TankTurret");
        TNT1 A 3;
        TNT1 A 0 A_GiveToTarget("TankMorpher", 1);
        TNT1 A 0 A_GiveToTarget("TankGunAmmo", 50);
        TNT1 A 0 A_GiveToTarget("TankRailAmmo", 110);
        TNT1 A 0 Thing_ChangeTID(0, 261);
        TNT1 A 0 A_NoBlocking;
        TNT1 A 1;
        TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
        TNT1 A 10;
        TNT1 A 0 
		{
			Thing_ChangeTID(0, 0);
			if (tha)
				tha.destroy();
		}
        TNT1 A 1;
        Stop;

	Death:	
	TNT1 A 1;
	TNT1 A 0 A_SpawnItem("BigExplosion1112");
	TNT1 A 0 A_PlaySound("weapons/explode");
	TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
	TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
	TNT1 A 0 A_Scream;
	TNT1 AAAAAA 0 A_CustomMissile ("MetalShard1", 96, 0, random (0, 360), 2, random (0, 180));
	TNT1 AAAAAA 0 A_CustomMissile ("MetalShard2", 96, 0, random (0, 360), 2, random (0, 180));
	TNT1 AAAAAAAAA 0 A_CustomMissile ("GlassShard", 96, 0, random (0, 360), 2, random (0, 360));
//	TNT1 A 0 A_SpawnItem("DestroyedArmouredVehicle");
	ELEC A 0 A_Explode(100, 250);
	TNT1 A 15;
	TNT1 A 0;
	Stop;
	
		Pain.Repair:
		 TNT1 A 0;
		 TNT1 A 0 A_ChangeFLag("NOPAIN", 1);
		 TNT1 A 0 HealThing(5);
		 TNKT A 1;
		 TNT1 A 0 HealThing(5);
		 TNT1 A 0 A_ChangeFLag("NOPAIN", 0);
		 Goto StandingHere;
	}
}



Class TankUsed: Tank
{
	Default{
    Radius 68;
	Height 74;
	}
    States
    {
	Spawn:

		TNT1 A 0;
	    TNT1 A 1;
		TNT1 A 0 ACS_NamedExecuteAlways("Leaving Tank", 0, 0, 0, 0);//SpawnVehicleBase
		TNT1 A 0 Thing_ChangeTID(0, 261);
		TNT1 A 1 A_ChangeFlag("FRIENDLY", 0);
		TNT1 A 5 ;
		TNT1 A 0 Thing_ChangeTID(0, 0);
		TNT1 A 0 A_ChangeFlag("THRUACTOR", 0);
		TNT1 A 0 A_ChangeFlag("FRIENDLY", 1);
		TNT1 A 0 ACS_Execute(129);
		Goto StandingHere;
	
	IsOnline:
		TNT1 A 0;
		TNT1 A 1;
		TNT1 A 0 A_TAkeInventory("TankBaseDirection", 500);
		Goto StandingHere;
		
	
	
	Active:
		TNT1 A 0 ;
		TTR1 A 0 A_ChangeFlag("FRIENDLY", 0);
		TNT1 A 0 Thing_ChangeTID(0, 261);
		TNT1 A 0 ACS_ExecuteAlways(130, 0, 0, 0, 0);//Check Vehicle Health
		//TNT1 A 0 A_Chase("","",CHF_DONTMOVE )
		TNT1 A 0 A_GiveToTarget("CheckingMorphingPlayerHealth", 1);
		TNT1 A 3;
		TNT1 A 0 A_GiveToTarget("TankMorpher", 1);
		TNT1 A 0 Thing_ChangeTID(0, 261);
		TNT1 A 0 A_NoBlocking;
		TNT1 A 1;
		TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
		TNT1 A 10;
		TNT1 A 0 Thing_ChangeTID(0, 0);
		Stop;
	}
}

	


Class TankSwitch : PowerMorph 
{ 
	default
	{
	PowerMorph.PlayerClass "PlayerTank";
	}
}



Class TankMorpher : CustomInventory 
{
  States
  {
  PickUp:
  TNT1 A 1;
  TNT1 A 0 ACS_ExecuteAlways(134, 0, 0, 0, 0);//Get into Tank
  TNT1 A 0 A_GiveInventory("TankMorphActivation");
  TNT1 A 0 A_SpawnItem("CancelTeleportFog");
  TNT1 A 1;
  Stop;
  }
 }
 


Class TankMorphActivation : PowerupGiver
{
  default{
  Powerup.Type "TankSwitch";
  Powerup.Duration 252000;
  +INVENTORY.AUTOACTIVATE;
  +INVENTORY.ALWAYSPICKUP;
  Inventory.MaxAmount 1;
  Health 100;
  GibHealth 1;
  Mass 9999;
  Height 96;
  Radius 32;
  }
  States
  {
  Spawn:
  TNT1 A 100;
  Stop;
  
  PickUp:
  TNT1 A 1;
  TNT1 A 1;
  Stop;
  }
 }
 
 


Class PlayerTank : PlayerPawn
{
    int tankbasedirection;
	int Tank_Animation;
	int Tank_Left_Tread_Display;
	int Tank_Right_Tread_Display;
	
	
	
	Default{
	
	Speed 0;
	Radius 64;
	Height 34;
	Mass 9999;
	PainChance 0;
	health 1500;
	-PICKUP;
//	Speed 0.01;
	player.viewheight	90;
    player.attackzoffset 90;
	MaxStepHeight 32;
	Player.MorphWeapon "TankGun";
    Player.JumpZ 0;
	damagefactor "slime", 0.0;
	BloodType "TankBlood", "TankBlood", "TankBlood";
	damagefactor "stomp", 0;
	damagefactor "Incinerate", 0.0;
//	damagefactor "normal", 0.0;
	damagefactor "Treads", 0.0;
	
	+SHOOTABLE;
	+NOSKIN;
	+NORADIUSDMG;
	+FORCERADIUSDMG;
	+FIXMAPTHINGPOS;
	+DONTRIP;
	+NOWALLBOUNCESND;
	-CANUSEWALLS;
	+THRUSPECIES;
	Species "Abrams";
	+INTERPOLATEANGLES;
	-PICKUP;
	DamageFactor "Repair", 0.0; damagefactor "CheckRepair", 0.0;
	damagefactor "Head", 0.0;	damagefactor "FriendBullet", 0.0;    damagefactor "Taunt", 0.0;    damagefactor "KillMe", 0.0;
	damagefactor "Shotgun", 0.0;    damagefactor "Shrapnel", 0.0;    damagefactor "Blood", 0.0;    damagefactor "BlueBlood", 0.0;
	damagefactor "Explosives", 5.5; damagefactor "bullet", 0.0; damagefactor "monsterbullet", 0.0; damagefactor "shotgun", 0; damagefactor "monstershotgun", 0.0; damagefactor "monsterminigun", 0.0;
	damagefactor "GreenBlood", 0.0;    damagefactor "MinorHead", 0.0;    damagefactor "Decaptate", 0.0;	damagefactor "MonsterKnocked", 0.0;
    damagefactor "CancelTeleportFog", 0.0;	damagefactor "BHFTOnBarrel", 0.0;	damagefactor "GibRemoving", 0.0;	damagefactor "SuperPunch", 0.0;
	damagefactor "HelperMarineFatallity", 0.0;	damagefactor "Leg", 0.0;	damagefactor "SpawnMarine", 0.0;	damagefactor "TeleportRemover", 0.0;
	DamageFactor "CauseObjectsToSplash", 0.0; DamageFactor "Trample", 0.0; DamageFactor "Minigun", 0.0; damageFactor "Machinegun", 0.0;
	damagefactor "Plasma", 2.5; damagefactor "Plasma2", 2.5;
	damagefactor "Desintegrate", 4.5;
	damagefactor "Blast", 0.0;
	damagefactor "ExplosiveImpact", 0.5;
	damagefactor "Burn", 0.0;
	damagefactor "Arm", 0.0;
	damagefactor "SSG", 0.0;
	damagefactor "Head", 0.0;
	damagefactor "Cutless", 0.0;
	damagefactor "TankShell", 0.4;
	damagefactor "Explosive", 0.5;
	damagefactor "HeavyTankMachineGun", 0.0;
	
	}

		TankHull THA;
		private double curangle;
		
		override void BeginPlay() 
		{
		super.BeginPlay();
		SpawnHitBoxes();
		}
	
		private void SpawnHitBoxes() 
		{
		SpawnHitBox("Vehicle_Hitbox", (84, 0, 0), 82, 128);
		SpawnHitBox("Vehicle_Hitbox", (-84, 0, 0), 82, 78);
		}

	override void Tick()
	{
		curangle = tankbasedirection;
		super.Tick();
		if (!THA) {
			THA = TankHull(Spawn("TankHull", pos)); 
			THA.master = self;
		}
		else {
			THA.A_SetAngle(tankbasedirection,SPF_INTERPOLATE);	
			THA.SetOrigin(pos,false);
		}
	}
	
	States
	{
	
	
		
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ThrustTHingZ(0, 0, -1, 1);
		TNKH A 1 ;
	Spawn2:
	    TNT1 A 0 
		{
			TakeInventory("PressedUse", 1);
			TakeInventory("TurnRight", 1);
			TakeInventory("TurnLeft", 1);
			TakeInventory("Accelerate", 1);
			TakeInventory("BackPedal", 1);
			ACS_ExecuteAlways(888, 0, 0, 0, 0);
//			ACS_ExecuteAlways(995, 0, 0, 0, 0);
		}
		TNKH A 1
		{
			{THA = SpawnTankHull("TankHull");}
			A_SpawnItemEx ("TankTurret" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
				
		}
		TNT1 A 0 
		{	
			TakeInventory("PressedUse", 1);
			TakeInventory("IsOverWater", 9999);
			TakeInventory("IsOverSlime", 9999);
			TakeInventory("IsOverSludge", 9999);
			TakeInventory("IsOverLava", 9999);
			TakeInventory("IsOverBlood", 9999);
			TakeInventory("IsOverGrass", 9999);
			TakeInventory("IsOverSand", 9999);
			TakeInventory("IsOverGravel", 9999);
			TakeInventory("IsOverDirt", 9999);
			TakeInventory("IsOverMetal", 9999);
			TakeInventory("IsOverMetal2", 9999);
			TakeInventory("IsOverRock", 9999);
			TakeInventory("IsOverSnow", 9999);
			TakeInventory("IsOverWood", 9999);
			TakeInventory("IsOverTile", 9999);
			TakeInventory("IsOverTile2", 9999);
			TakeInventory("IsOverSlimy", 9999);	
		}
	Goto Stay;

		

	ExitVehicle:
	TNT1 A 1;
	
	TNT1 A 0 A_TakeInventory("PressedUse", 1);
	
	TNT1 A 0 A_SpawnItemEx ("TransferPlayerOutOfVehicle", 0, 0, 150);
	
	TNKH A 1;
	TNT1 A 0 
	{
		{THA = SpawnTankHull("TankHull");}
	}
	TNKH A 1;
	TNT1 A 0 
	{
		{THA = SpawnTankHull("TankHull");}
	}
	TNKH A 1;
	TNT1 A 0 
	{
		{THA = SpawnTankHull("TankHull");}
	}	
	TNT1 A 0 A_JumpIfInventory("CanLeaveVehicle", 1, "CanExit");
	TNT1 A 0 A_Print("Can't leave from this direction", 1);
	Goto Stay;
	
	CanExit:
	TNT1 A 0;
	TNT1 A 2;
	TNT1 A 0 A_TakeInventory("PressedUse", 1);
	TNT1 A 0 A_TakeInventory("CanLeaveVehicle", 1);
	TNT1 A 0 ACS_Execute(135);
	TNT1 A 0 ACS_Execute(871);
	TNT1 A 0 A_SpawnItemEx ("TankUsed", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	Goto FinishExit;

	FinishExit:
	TNT1 A 0 A_TakeInventory("PressedUse", 1);
	TNT1 AAA 10 A_TakeInventory("PressedUse", 1);
	TNT1 A 0 A_TakeInventory("PressedUse", 1);
	Goto Stay;
	
		
		
	TurnLeft:
		TNT1 A 0;
		TNKH A 1 
				{	
					A_SpawnItemEx ("TankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);					
					THA = SpawnTankHull("TankHull");
					Tank_Left_Tread_Display = Tank_Animation;
					 Switch(Tank_Left_Tread_Display)
				   {
					default:
						break;
				   case 0:  Tank_Left_Tread_Display = 1;
				   case 1:  A_SpawnItemEx ("TankTreads_01" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 2:  A_SpawnItemEx ("TankTreads_02" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 3:  A_SpawnItemEx ("TankTreads_03" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 4:  A_SpawnItemEx ("TankTreads_04" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 5:  A_SpawnItemEx ("TankTreads_05" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 6:  A_SpawnItemEx ("TankTreads_06" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 7:  A_SpawnItemEx ("TankTreads_07" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 8:  A_SpawnItemEx ("TankTreads_08" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 9:  A_SpawnItemEx ("TankTreads_09" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 10: A_SpawnItemEx ("TankTreads_10" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 11: A_SpawnItemEx ("TankTreads_11" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 12: A_SpawnItemEx ("TankTreads_12" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 13: A_SpawnItemEx ("TankTreads_13" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 14: A_SpawnItemEx ("TankTreads_14" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 15: A_SpawnItemEx ("TankTreads_15" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 16: A_SpawnItemEx ("TankTreads_16" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 17: A_SpawnItemEx ("TankTreads_17" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 18: A_SpawnItemEx ("TankTreads_18" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 19: A_SpawnItemEx ("TankTreads_19" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 20: A_SpawnItemEx ("TankTreads_20" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 21: A_SpawnItemEx ("TankTreads_21" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 22: A_SpawnItemEx ("TankTreads_22" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 23: A_SpawnItemEx ("TankTreads_23" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 24: A_SpawnItemEx ("TankTreads_24" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 25: A_SpawnItemEx ("TankTreads_25" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 26: A_SpawnItemEx ("TankTreads_26" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 27: A_SpawnItemEx ("TankTreads_27" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 28: A_SpawnItemEx ("TankTreads_28" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 29: A_SpawnItemEx ("TankTreads_29" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 30: A_SpawnItemEx ("TankTreads_30" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 31: A_SpawnItemEx ("TankTreads_31" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 32: A_SpawnItemEx ("TankTreads_32" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 33: A_SpawnItemEx ("TankTreads_33" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 34: A_SpawnItemEx ("TankTreads_34" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 35: A_SpawnItemEx ("TankTreads_35" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
					}
					
				}
		TNT1 A 0 { tankbasedirection += 6; }
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		Goto CheckIfStillMoves;
	
	TurnLeft2:
		TNT1 A 0{ tankbasedirection = 0; }
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		Goto CheckIfStillMoves;
		
	TurnRight:
		TNT1 A 0;
		TNKH A 1 {
					A_JumpIf(tankbasedirection == 0, "TurnRIght2");
					A_SpawnItemEx ("TankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
					THA = SpawnTankHull("TankHull");
					Tank_Right_Tread_Display = Tank_Animation;
					 Switch(Tank_Right_Tread_Display)
				   {
					default:
						break;
				   case 0:  Tank_Right_Tread_Display = 1;
				   case 1:  A_SpawnItemEx ("TankTreads_01" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 2:  A_SpawnItemEx ("TankTreads_02" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 3:  A_SpawnItemEx ("TankTreads_03" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 4:  A_SpawnItemEx ("TankTreads_04" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 5:  A_SpawnItemEx ("TankTreads_05" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 6:  A_SpawnItemEx ("TankTreads_06" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 7:  A_SpawnItemEx ("TankTreads_07" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 8:  A_SpawnItemEx ("TankTreads_08" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 9:  A_SpawnItemEx ("TankTreads_09" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 10: A_SpawnItemEx ("TankTreads_10" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 11: A_SpawnItemEx ("TankTreads_11" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 12: A_SpawnItemEx ("TankTreads_12" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 13: A_SpawnItemEx ("TankTreads_13" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 14: A_SpawnItemEx ("TankTreads_14" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 15: A_SpawnItemEx ("TankTreads_15" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 16: A_SpawnItemEx ("TankTreads_16" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 17: A_SpawnItemEx ("TankTreads_17" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 18: A_SpawnItemEx ("TankTreads_18" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 19: A_SpawnItemEx ("TankTreads_19" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 20: A_SpawnItemEx ("TankTreads_20" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 21: A_SpawnItemEx ("TankTreads_21" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 22: A_SpawnItemEx ("TankTreads_22" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 23: A_SpawnItemEx ("TankTreads_23" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 24: A_SpawnItemEx ("TankTreads_24" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 25: A_SpawnItemEx ("TankTreads_25" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 26: A_SpawnItemEx ("TankTreads_26" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 27: A_SpawnItemEx ("TankTreads_27" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 28: A_SpawnItemEx ("TankTreads_28" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 29: A_SpawnItemEx ("TankTreads_29" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 30: A_SpawnItemEx ("TankTreads_30" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 31: A_SpawnItemEx ("TankTreads_31" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 32: A_SpawnItemEx ("TankTreads_32" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 33: A_SpawnItemEx ("TankTreads_33" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 34: A_SpawnItemEx ("TankTreads_34" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 35: A_SpawnItemEx ("TankTreads_35" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
					}
					
				}
		
		TNT1 A 0 { tankbasedirection -= 6; }
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		Goto CheckIfStillMoves;
	
	TurnRight2:
		TNT1 A 0 { tankbasedirection = 360; }
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		Goto CheckIfStillMoves	;
	
	
	CheckIfStillMoves:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "ExitVehicle");
		TNT1 A 0 A_JumpIfInventory("Accelerate", 1, "Accelerate");
		TNT1 A 0 A_JumpIfInventory("BackPedal", 1, "BackPedal");
		TNT1 A 0 A_JumpIfInventory("TurnLeft", 1, "TurnLeft");
		TNT1 A 0 A_JumpIfInventory("TurnRight", 1, "TurnRight");
		TNT1 A 0 A_StopSound(5);

		TNT1 A 0 A_PlaySound("HeavyTank/HVYMOV2", 5, 1, 0, 0);
		
	Stay:
		
		TNT1 A 0 { THA = SpawnTankHull("TankHull");}
		TNT1 A 0 A_SpawnItemEx ("TankTreads_01" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "ExitVehicle");
		TNT1 A 0 A_JumpIfInventory("BackPedal", 1, "BackPedal");
		TNT1 A 0 A_JumpIfInventory("Accelerate", 1, "Accelerate");
		TNKH A 1 A_SpawnItemEx ("TankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_JumpIF(velz < 0, "Falling");
		Goto Stay;
		
	
	Pain.TracksDamaged:
	    TNT1 A 0;
		TNT1 A 0 ;
		
		TNT1 A 0 A_Jump(32, "DestroyTracks");
		TNT1 A 0 {THA = SpawnTankHull("TankHull");}
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "ExitVehicle");
		TNT1 A 0 A_JumpIfInventory("BackPedal", 1, "BackPedal");
		TNT1 A 0 A_JumpIfInventory("Accelerate", 1, "Accelerate");
		TNKH A 1 A_SpawnItemEx ("TankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		Goto Stay;
		
		
	
	Accelerate:
		
		TNT1 A 0 A_PlaySound("HeavyTank/HVYMOV", 5, 1, 1);
		TNT1 A 0 A_SpawnItemEx ("TankTreadsDamage" , 100, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY);
			
		TNT1 A 0 A_SpawnItemEx ("TankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 {THA = SpawnTankHull("TankHull");}
		TNT1 A 1 {	
					 Switch(Tank_Animation)
				   {
					default:
						break;
				   case 0: Tank_Animation = 1;
				   case 1:  A_SpawnItemEx ("TankTreads_01" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 2:  A_SpawnItemEx ("TankTreads_02" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 3:  A_SpawnItemEx ("TankTreads_03" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 4:  A_SpawnItemEx ("TankTreads_04" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 5:  A_SpawnItemEx ("TankTreads_05" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 6:  A_SpawnItemEx ("TankTreads_06" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 7:  A_SpawnItemEx ("TankTreads_07" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 8:  A_SpawnItemEx ("TankTreads_08" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 9:  A_SpawnItemEx ("TankTreads_09" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 10: A_SpawnItemEx ("TankTreads_10" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 11: A_SpawnItemEx ("TankTreads_11" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 12: A_SpawnItemEx ("TankTreads_12" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 13: A_SpawnItemEx ("TankTreads_13" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 14: A_SpawnItemEx ("TankTreads_14" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 15: A_SpawnItemEx ("TankTreads_15" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 16: A_SpawnItemEx ("TankTreads_16" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 17: A_SpawnItemEx ("TankTreads_17" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 18: A_SpawnItemEx ("TankTreads_18" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 19: A_SpawnItemEx ("TankTreads_19" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 20: A_SpawnItemEx ("TankTreads_20" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 21: A_SpawnItemEx ("TankTreads_21" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 22: A_SpawnItemEx ("TankTreads_22" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 23: A_SpawnItemEx ("TankTreads_23" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 24: A_SpawnItemEx ("TankTreads_24" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 25: A_SpawnItemEx ("TankTreads_25" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 26: A_SpawnItemEx ("TankTreads_26" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 27: A_SpawnItemEx ("TankTreads_27" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 28: A_SpawnItemEx ("TankTreads_28" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 29: A_SpawnItemEx ("TankTreads_29" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 30: A_SpawnItemEx ("TankTreads_30" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 31: A_SpawnItemEx ("TankTreads_31" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 32: A_SpawnItemEx ("TankTreads_32" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 33: A_SpawnItemEx ("TankTreads_33" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 34: A_SpawnItemEx ("TankTreads_34" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
				   case 35: A_SpawnItemEx ("TankTreads_35" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation += 1; break;
					}
					if (Tank_Animation > 35) Tank_Animation = 1;
					
				}
		
		TNT1 A 0 A_SpawnItemEx ("TankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);												//was 1
		TNT1 A 0 ThrustThing(tankbasedirection*256/360, 1, 1);
		TNT1 A 0{THA = SpawnTankHull("TankHull");}
		
		
		TNT1 A 0 A_JumpIfInventory("TurnLeft", 1, "TurnLeft");
		TNT1 A 0 A_JumpIfInventory("TurnRight", 1, "TurnRight");
		
		TNT1 A 0 A_SpawnItemEx ("TankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);												//was 1
		TNT1 A 0 ThrustThing(tankbasedirection*256/360, 1, 1);
		TNT1 A 0 {THA = SpawnTankHull("TankHull");}
		TNT1 A 0 A_JumpIF(velz < 0, "Falling");
		Goto CheckIfStillMoves;
		
		
	Backpedal:
		
		
		TNT1 A 0 A_PlaySound("HeavyTank/HVYMOV", 5, 1, 1);
		
		TNT1 A 0 A_SpawnItemEx ("TankTreadsDamage" , -100, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY);
		
		TNKH A 0 A_SpawnItemEx ("TankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 {THA = SpawnTankHull("TankHull");}
		
		TNKH A 1 {	
					If(Tank_Animation == 36)
					Tank_Animation == 1;
					 Switch(Tank_Animation)
				   {
					default:
						break;
				   case 0: Tank_Animation = 35;
				   case 1:  A_SpawnItemEx ("TankTreads_01" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 2:  A_SpawnItemEx ("TankTreads_02" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 3:  A_SpawnItemEx ("TankTreads_03" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 4:  A_SpawnItemEx ("TankTreads_04" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 5:  A_SpawnItemEx ("TankTreads_05" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 6:  A_SpawnItemEx ("TankTreads_06" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 7:  A_SpawnItemEx ("TankTreads_07" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 8:  A_SpawnItemEx ("TankTreads_08" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 9:  A_SpawnItemEx ("TankTreads_09" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 10: A_SpawnItemEx ("TankTreads_10" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 11: A_SpawnItemEx ("TankTreads_11" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 12: A_SpawnItemEx ("TankTreads_12" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 13: A_SpawnItemEx ("TankTreads_13" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 14: A_SpawnItemEx ("TankTreads_14" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 15: A_SpawnItemEx ("TankTreads_15" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 16: A_SpawnItemEx ("TankTreads_16" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 17: A_SpawnItemEx ("TankTreads_17" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 18: A_SpawnItemEx ("TankTreads_18" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 19: A_SpawnItemEx ("TankTreads_19" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 20: A_SpawnItemEx ("TankTreads_20" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 21: A_SpawnItemEx ("TankTreads_21" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 22: A_SpawnItemEx ("TankTreads_22" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 23: A_SpawnItemEx ("TankTreads_23" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 24: A_SpawnItemEx ("TankTreads_24" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 25: A_SpawnItemEx ("TankTreads_25" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 26: A_SpawnItemEx ("TankTreads_26" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 27: A_SpawnItemEx ("TankTreads_27" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 28: A_SpawnItemEx ("TankTreads_28" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 29: A_SpawnItemEx ("TankTreads_29" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 30: A_SpawnItemEx ("TankTreads_30" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 31: A_SpawnItemEx ("TankTreads_31" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 32: A_SpawnItemEx ("TankTreads_32" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 33: A_SpawnItemEx ("TankTreads_33" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 34: A_SpawnItemEx ("TankTreads_34" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
				   case 35: A_SpawnItemEx ("TankTreads_35" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); Tank_Animation -= 1; break;
					}				
				}
//		TNT1 A 0 ;//ThrustThing(tankbasedirection*256/360+128, 1, 1);
		TNT1 A 0 {THA = SpawnTankHull("TankHull");}
		TNT1 A 0 ThrustThing(tankbasedirection*256/360+128, 1, 1);
		
		TNT1 A 0 A_JumpIfInventory("TurnRight", 1, "TurnLeft");
		TNT1 A 0 A_JumpIfInventory("TurnLeft", 1, "TurnRight");
		
		TNKH A 0 A_SpawnItemEx ("TankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
//		TNT1 A 0 ThrustThing(tankbasedirection*256/360+128, 1, 1);
		TNT1 A 0 {THA = SpawnTankHull("TankHull");}
		TNT1 A 0 A_JumpIF(velz < 0, "Falling");
		Goto CheckIfStillMoves;
		
		
	Falling:
		TNT1 A 0;
		TNT1 A 0 A_CheckFloor("CheckIfStillMoves");
	
	FallingForReal:
		TNT1 A 0;
		TNKH A 1 {
				 A_SpawnItemEx ("TankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
				 {THA = SpawnTankHull("TankHull");}
				 A_SpawnItemEx ("TankTreads_01" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
				 }
		TNT1 A 0 A_JumpIF(velz == 0, "CrashIntoGround");
		TNT1 A 0 A_GiveInventory("VehicleFallingCount", 1);
		Loop;
		
	CrashIntoGround:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfinventory("VehicleFallingCount", 6, "CrashIntoGroundViolently");
		TNKH A 1 {
				 A_SpawnItemEx ("TankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
				 {THA = SpawnTankHull("TankHull");}
				 A_SpawnItemEx ("TankTreads_01" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
				 }
		TNT1 A 0 A_StopSound(5);
		TNT1 A 0 A_SpawnItem("CrashTankIntotheGround1");
		TNT1 A 0 A_SpawnItem("CrashTankIntotheGround2");
		TNT1 A 0 A_SpawnItemEx ("LargeMassWaterImpact", 0, 0, -10);
//		TNT1 A 0 Radius_Quake(1, 6, 0, 4, 0);
//		TNT1 A 0 A_PlaySound("EBIKEBNC", 2);
		TNT1 A 0 A_TakeInventory("VehicleFallingCount", 100);
		Goto Stay;
		
	CrashIntoGroundViolently:
		TNT1 A 0;
		TNKH A 1 {
				 A_SpawnItemEx ("TankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
				 {THA = SpawnTankHull("TankHull");}
				 A_SpawnItemEx ("TankTreads_01" , 0, 0, 0, 0, 0, 0, tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
				 }
		TNT1 A 0 A_StopSound(5);
		TNT1 A 0 A_SpawnItem("CrashTankIntotheGround1");
		TNT1 A 0 A_SpawnItem("CrashTankIntotheGround2");
		
		TNT1 A 0 A_SpawnItemEx ("ExplosionSplashSpawner", 0, 0, -10);
		
//		TNT1 A 0 Radius_Quake(8, 24, 0, 4, 0);
//		TNT1 A 0 A_PlaySound("BIKECLW", 1);
//		TNT1 A 0 A_PlaySound("EBIKECLS", 2);
		TNT1 AAAA 0 A_CustomMissile ("ExplosionSmoke", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 A 0 A_TakeInventory("VehicleFallingCount", 100);
		TNT1 A 0 A_SetPitch(-8.0 + pitch);
		TNKH A 1 ;
		TNT1 A 0 
		{
			
		}
		TNT1 A 0 A_SetPitch(4.0 + pitch);
		TNKH A 1;
		TNT1 A 0
		{
			
		}
		TNT1 A 0 A_SetPitch(4.0 + pitch);
		Goto Stay;
		
		
		
	Death:	
	XDeath:
	TNT1 A 0 ACS_ExecuteAlways(871, 0, 0, 0, 0);
    TNT1 A 1;
	TNT1 A 0 A_SpawnItem("BigExplosion1112");
	TNT1 A 0 A_PlaySound("weapons/explode");
	TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
	TNT1 A 0 A_Scream;
	TNT1 A 0 A_NoBlocking;
	TNT1 AAAAAA 0 A_CustomMissile ("MetalShard1", 96, 0, random (0, 360), 2, random (0, 180));
	TNT1 AAAAAA 0 A_CustomMissile ("MetalShard2", 96, 0, random (0, 360), 2, random (0, 180));
	TNT1 AAAAAAAAA 0 A_CustomMissile ("GlassShard", 96, 0, random (0, 360), 2, random (0, 360));
	ELEC A 0 A_Explode(100, 250);
//	TNT1 A 0 A_SpawnItem("DestroyedArmouredVehicle");
	8762 A 5;
	TNT1 A 0 A_TakeInventory("TankGun", 1);
	8762 A 100;
	8762 A -1;
	Stop;
	
	
	}
}



Class RailLooker : Actor
{	Default{
	+NOINTERACTION;
	+NEVERTARGET;
	-SOLID;
	Monster;
	+Friendly;
	FriendlySeeBlocks 12;
	-SHOOTABLE;
	Scale 0.5;
	RenderStyle "NONE";
	}
	
	override bool CanCollideWith(actor other,bool passive)
	{
		if (passive && other && other is "PlayerTank" || other is "TankGunShell" || other is "DoomerRailshot" || other is "AnnihilatorRailShot" || other is "Vehicle_Hitbox")
        {
            return false;
        }
	  return true;
	}
	States
	{
	Spawn:
		TNT1 A 1 NoDelay A_LookEx(0,0,2524,0,50);
		Stop;
	See:
		TNT1 A 0 {	A_FaceTarget();
					A_CustomRailgun(175,spawnofs_xy: 17,"Orange","Red", RGF_SILENT, 0, 0, "RedPuff",0,0,0,0,5,1.0,"RedTrail",17);
				//	A_SpawnProjectile("AnnihilatorRailShot", spawnheight:25, spawnofs_xy:20, ptr:AAPTR_TARGET);
				 }
		TNT1 A 1;
		Stop;
	}
}

Class AnnihilatorLooker : RailLooker
{

	States
	{
	Spawn:
		TNT1 A 1 NoDelay A_LookEx(0,0,2524,0,120);
		Stop;
	See:
		TNT1 A 0 {	A_FaceTarget();
					A_CustomRailgun(175,spawnofs_xy: 17,"Purple","Blue", RGF_SILENT, 0, 0, "AnnihilatorPuff",0,0,0,0,5,1.0,"AnnihilatorTrail",17);
				 }
		TNT1 A 1;
		Stop;
	}


}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Vehicle's weapons and misc
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Class TankGun : DoomWeapon
{
	default
	{
//	Game Doom;
	Weapon.SelectionOrder 1900;
	Weapon.AmmoUse1 0;
	Weapon.AmmoGive1 0;
	Weapon.AmmoUse2 0;
	Weapon.AmmoGive2 0;
	Weapon.AmmoType2 "TankRailAmmo";
	Weapon.AmmoType1 "TankGunAmmo";
	Obituary "$OB_MPPISTOL";
	+WEAPON.AMMO_OPTIONAL;
	+WEAPON.ALT_AMMO_OPTIONAL;
	//+WEAPON.NOAUTOFIRE;
	Inventory.Pickupmessage "$PICKUP_PISTOL_DROPPED";
	Tag "$TAG_PISTOL";
	}
	int RailCycle;
	int RailRecharge;
	int recharge;
	
	override void PostBeginPlay() {
	super.PostBeginPlay();
	
	RailCycle = 1;
	}
	
    override void DoEffect() {
    super.DoEffect();
    if (!owner || !owner.player) //double-check that owner exists and its a player
      return; //do nothing otherwise
    if (level.isFrozen())
      return; //do nothing if level is frozen
    if (recharge > 0) 
      recharge--; // if recharge is above 0, reduce it by 1 every tick
	if (RailRecharge > 0)
	  RailRecharge--;
	}
	action void A_FireTankGun()
	{
					 A_StartSound("TANKGUN", 4, 0, 1, 0);
                     A_TakeInventory("TankGunAmmo", 1);
                     A_FireProjectile("TankGunShell", 0, 1, 0, 17);
					 A_SpawnItemEx("TankFireEffekt",xofs:260,yofs:0,zofs:50,flags:SXF_NOCHECKPOSITION);					 
                     ACS_NamedExecuteAlways("Show Tank_Hud", 0, 0, 0, 0);//SHOWHUD;	
	}
	
	
	action void	A_FireTankRailgun() 
	{
						ACS_NamedExecuteAlways("Show Tank_Hud", 0, 0, 0, 0);
					A_AlertMonsters();
					
						If(invoker.RailCycle == 1){
							A_FireProjectile("BlueRailShot", 0, 0, 0, 0);
							A_RailAttack(230, 17, 1, "Green","Cyan", RGF_SILENT, 0, "BlueRailgunPuff",0,0,0,0,5,1.0,"BlueRailGunTrail",17);
//							A_FireProjectile("RailgunWallPenetrationHitscan", 0, 0, -1, 0, 0, 0);
							 A_StartSound("Tank/RAIL1",4, 0, 1.0);
							 invoker.RailCycle = 2;
							}
						else If(invoker.RailCycle == 2){
							A_SpawnItemEx("RailLooker",xofs:30,yofs:20,zofs:17,0,0,0,  20,SXF_NOCHECKPOSITION);
							A_SpawnItemEx("RailLooker",xofs:30,yofs:20,zofs:17,0,0,0,  70,SXF_NOCHECKPOSITION);
							A_SpawnItemEx("RailLooker",xofs:30,yofs:20,zofs:17,0,0,0, -70,SXF_NOCHECKPOSITION);
							A_SpawnItemEx("RailLooker",xofs:30,yofs:20,zofs:17,0,0,0, -20,SXF_NOCHECKPOSITION);
							A_RailAttack(375, 17, 1, "Orange","Red", RGF_SILENT, 0, "RedPuff",0,0,0,0,5,1.0,"RedTrail",17);
							A_FireProjectile("SmokeSpawner",0,0,0,5);
							A_FireProjectile("RedFlare",0,0,0,5);
							A_PlaySound("Weapons/StachanovAddFire",1);
							A_PlaySound("Weapons/StachanovAddFire",3);
							invoker.RailCycle = 3;
							}
						else If(invoker.RailCycle == 3){
							A_FireProjectile("AnnihilatorRailShot", 0, 0, 20, 25);
							A_RailAttack(180, 17, 1, "Purple","Blue", RGF_SILENT, 0, "AnnihilatorPuff",0,0,0,0,5,1.0,"AnnihilatorTrail",17);
							A_StartSound("Tank/RAIL2", 4, 0, 1.0);
							invoker.RailCycle = 1;
							}
					A_TakeInventory("TankRailAmmo", 1);
	}
	States
	{
	
	
	
	Ready:
		TNT1 A 1 {
				ACS_NamedExecuteAlways("Show Tank_Hud", 0, 0, 0, 0);
/*      if (invoker.recharge > 0) 				
				A_WeaponReady(WRF_NOPRIMARY); 
	  if (invoker.RailRecharge > 0) 			
				A_WeaponReady(WRF_NOSECONDARY);*/
	if (invoker.owner.GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK && invoker.recharge == 0 && invoker.owner.CountInv("TankGunAmmo") >= 1)
			{	A_FireTankGun(); invoker.recharge = 120; }
	 if (invoker.owner.GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK && invoker.RailRecharge == 0 && invoker.owner.CountInv("TankRailAmmo") >= 1)
			{	A_FireTankRailGun(); invoker.RailRecharge = 50; }
				}
		TNT1 A 0{
				 A_stopSound(3);
				 A_GiveInventory("HeavyTankReady", 1);
	             ACS_NamedExecuteAlways("Show Tank_Hud", 0, 0, 0, 0);//SHOWHUD
				 A_JumpIf (pitch > 220, "TooHighCheck2");
				 A_JumpIf (pitch > 16, "TooLowCheck2");
				}
		Loop;
		
	ZoomMode:
		TNT1 A 1;
		TNT1 A 0 A_JumpIfinventory("TankZoom", 1, "StopZoom");
		TNT1 A 0 A_ZoomFactor(5.0);
		TNT1 A 0 A_GiveInventory("TankZoom");
		TNT1 A 10;
		TNT1 A 0 A_TakeInventory("PressedJump", 1);
		Goto Ready;
	
	StopZoom:
		TNT1 A 1;
		TNT1 A 0 A_ZoomFactor(1.0);
		TNT1 A 0 A_TakeInventory("TankZoom", 1);
		TNT1 A 10;
		TNT1 A 0 A_TakeInventory("PressedJump", 1);
		Goto Ready;
		
	NotReady:
		TNT1 A 1 A_GiveInventory("HeavyTankReady", 1);
		TNT1 A 0 ACS_NamedExecuteAlways("Show Tank_Hud", 0, 0, 0, 0);//SHOWHUD
		Goto Ready;
		
	Deselect:
		TNT1 A 1 A_Lower;
		TNT1 A 0 A_ZoomFactor(1.0);
		TNT1 A 0 SetPlayerProperty(0,0,4);
		Loop;
	Select:
		TNHD AA 0 A_Raise;
		TNT1 A 0 SetPlayerProperty(0,1,4);
		TNT1 A 1 A_TakeInventory("PressedUse", 1);
		TNT1 A 1 A_TakeInventory("PressedJump", 2);
		TNHD A 1 A_Raise;
		TNT1 A 1 A_TakeInventory("PressedJump", 2);
		TNT1 A 0;
		Goto Ready;
	Fire:
/*	    
		TNT1 A 1 {
      if (invoker.recharge > 0) //just in case, double-check that recharge timer is NOT over 0
					return ResolveState("Ready");
						invoker.recharge = 120;
				  return ResolveState(null);
				}		
		TNT1 A 1 A_FireTankGun();*/
	NoAmmo:
		TNT1 A 2;
		Goto Ready ;
		
	AltFire:
		TNT1 A 0 A_JumpIfInventory("TankRailAmmo", 1, 1);
		Goto NoAmmo;
/*			TNT1 A 1 {
					if (invoker.RailRecharge > 0) //just in case, double-check that recharge timer is NOT over 0
							return ResolveState("Ready");
								invoker.RailRecharge = 50;
						  return ResolveState(null);
					}		
			TNT1 A 2 A_FireTankRailgun();
		Goto Ready;*/

	TooHigh2:
		TNT1 A 0 A_SetPitch(326);
		Goto Ready;
		
	
	TooLowCheck2:
		//TNT1 A 0 A_JumpIf (pitch > 180, "TooHighCheck1");
		TNT1 A 0 A_SetPitch(16);
		Goto Ready;
		
		
	TooHighCheck2:
		TNT1 A 0;
		TNT1 A 0 A_JumpIf (pitch < 325, "TooHigh2");
		Goto Ready;
	
	
	
	TooHigh:
		TNT1 A 0 A_SetPitch(326);
		Goto Flash;
		
	
	TooLowCheck1:
		//TNT1 A 0 A_JumpIf (pitch > 180, "TooHighCheck1");
		TNT1 A 0 A_SetPitch(16);
		Goto Flash;
		
	TooHighCheck1:
		TNT1 A 0;
		TNT1 A 0 A_JumpIf (pitch < 325, "TooHigh");
		Goto Flash;
	
	
	Flash:
		TNT1 A 1;
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "LightEnd");
		TNT1 A 0 A_JumpIf (pitch > 220, "TooHighCheck1");
		TNT1 A 0 A_JumpIf (pitch > 16, "TooLowCheck1");
		TNT1 A 1;
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "LightEnd");
		TNT1 A 0 A_JumpIf (pitch > 220, "TooHighCheck1");
		TNT1 A 0 A_JumpIf (pitch > 16, "TooLowCheck1");
		TNT1 A 1;
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "LightEnd");
		TNT1 A 0 A_JumpIf (pitch > 220, "TooHighCheck1");
		TNT1 A 0 A_JumpIf (pitch > 16, "TooLowCheck1");
		Stop;
	
	LightEnd:
		TNT1 A 2;
		Stop;
		
	Spawn:
		LAUN A -1;
		Stop;
		
	}
}

Class TankMainGun : Inventory
{
	default{
	inventory.maxamount 1;
	}
}


Class TankRailAmmo : Ammo
{
	default{
//	Game Doom;
	Inventory.PickupMessage "Picked up a Missiles.";
	Inventory.Amount 110;
	Inventory.MaxAmount 110;
	Ammo.BackpackAmount 0;
	Ammo.BackpackMaxAmount 110;
	Inventory.Icon "TNT1";
	}
	States
	{
	Spawn:
		CLIP A -1;
		Stop;
	}
}


Class TankTreadsDamage : Actor
{
	default{
	+NOTARGET;
	Radius 1;
	Height 1;
	+NOGRAVITY;
	+NOTELEPORT;
	+NODAMAGETHRUST;
	+THRUGHOST;
	+NORADIUSDMG;
	+FORCERADIUSDMG;
	PROJECTILE;
	+DEHEXPLOSION;
	+ACTIVATEMCROSS;
	+EXPLODEONWATER;
	Damagetype "Treads";
	}
States
{
Spawn:
TNT1 A 0;
TNT1 A 0 A_Explode(5,50,0,damagetype:"Treads");
TNT1 A 0 A_SpawnItemEx("TankTreadsDamage2", 0, 50);
TNT1 A 0 A_SpawnItemEx("TankTreadsDamage2", 0, -50);
TNT1 A 0 A_SpawnItemEx("TankTreadsDamage3", 0, 50, 70);
TNT1 A 0 A_SpawnItemEx("TankTreadsDamage3", 0, -50, 70);
TNT1 A 0 A_SpawnItemEx("TankTreadsDamage3", 0, 0, 70);
TNT1 A 1 A_Noblocking;
PLAY A 0;
Stop;
 }
}


Class TankTreadsDamage2: TankTreadsDamage
{
States
{
Spawn:
TNT1 A 0;
TNT1 A 0 A_Explode(5,50,0,damagetype:"Treads");
PLAY A 0;
TNT1 A 1 A_Noblocking;
Stop;
 }
}


Class TankTreadsDamage3: TankTreadsDamage
{
States
{
Spawn:
TNT1 A 0;
TNT1 A 0 A_Explode(4,30,0,damagetype:"Treads");
PLAY A 0;
TNT1 A 1 A_Noblocking;
Stop;
 }
}

Class TankGunAmmo : Ammo
{
//	Game Doom
	Default{
//	SpawnID 11;
	Inventory.PickupMessage "Picked up a Magazine.";
	Inventory.Amount 50;
	Inventory.MaxAmount 50;
	Ammo.BackpackAmount 0;
	Ammo.BackpackMaxAmount 50;
	Inventory.Icon "TNT1A0";
	}
	States
	{
	Spawn:
		CLIP A -1;
		Stop;
	}
}


Class TankGunShell : fastprojectile
{
	Default{
	Radius 4;
	Height 4;
	Speed 260;
	Damagefunction (random (510, 860));
	Projectile;
	+RANDOMIZE;
	+DEHEXPLOSION;
	+ROCKETTRAIL;
	+MISSILE;
//	-NOGRAVITY;
	damagetype "TankShell";
//	Gravity 0.1;
//	SeeSound "weapons/rocklf";
//	DeathSound "weapons/rocklx";
	Obituary "$OB_MPROCKET";
	}
	States
	{
	Spawn:
		MISL A 1 Bright;
		Loop;
	Death:
		TNT1 A 0 A_SpawnItem("TankExplosionImpact");
		TNT1 A 0 A_StartSound("TANKEXP", 0, 0, 1.0, 0);
		TNT1 A 0 A_SpawnItemEx ("ExplosionSplashSpawner", 0, 0, -20);
		TNT1 A 0 A_SpawnItemEx ("BarrelKaboom",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
        TNT1 A 0 A_SpawnItemEx ("DetectFloorCrater",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
	    TNT1 A 0 A_SpawnItemEx ("DetectCeilCrater",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
	    TNT1 A 0 A_SpawnItemEx ("UnderwaterExplosion",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
        TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);

        TNT1 AAAAAAAAA 0 A_CustomMissile ("ExplosionParticleHeavy", 0, 0, random (0, 360), 2, random (0, 180));
        TNT1 AAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("ExplosionParticleHeavy", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAAAAAAAA 0 A_CustomMissile ("ExplosionParticleVeryFast", 0, 0, random (0, 360), 2, random (0, 360));
        TNT1 AAAAA 0 A_CustomMissile ("MediumExplosionFlames", 0, 0, random (0, 360), 2, random (0, 360));
        //EXPL AAAAA 0 A_CustomMissile ("ExplosionSmoke22", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 A 6;
//		TNT1 A 0 A_PlaySound("TANKEXP", 1);
		TNT1 A 12;
		Stop;
	}
}

Class TankExplosionImpact : Actor
{
	Default{
	damagetype "ExplosiveImpact";
	+MISSILE;
	+NOCLIP;
	}
	States
	{
	Spawn:
		TNT1 A 1;
		TNT1 A 0 A_Explode(200, 200);
		Stop;
	}
}

Class BlueRailShot : FastProjectile
{
  Default{
  Speed 400;
  Radius 5;
  Height 3;
  Damage 35;
  Renderstyle "Add";
  +RIPPER;
  -CANNOTPUSH;
  +NODAMAGETHRUST;
  +EXTREMEDEATH;
  +FORCERADIUSDMG;
  DamageType "SSG";
  DeathSound "";
  //MissileType "BlueRailGunTrail";
  }
  states
  {
  Spawn:
    TNT1 A 0;
//    TNT1 A 1 A_PlaySound("Weapons/StachanovFly",5,1.0,1);
	TNT1 A 1 ;
    Loop;
  Death:
//		TNT1 A 0 A_StopSound(5);
		TNT1 AAAA 0 A_SpawnItemEx("BluePlasmaParticleSpawner", 0, 0, 0, 0, 0, 0, 0, 128);
		TNT1 AA 0 A_SpawnItem("WhiteShockwave");
		
		TNT1 A 0 A_Explode(120,5, 0);
//		TNT1 A 0 A_Playsound("explosion/deepimpact", 3);
//		EXPL A 0 Radius_Quake (4, 10, 0, 15, 0);
		TNT1 A 0 A_SpawnItemEx("RailgunImpactExplosionSFX", 0, 0, 0, 0, 0, 0, 0, 128);
        TNT1 AAA 0 A_CustomMissile ("BDExplosionparticles", 0, 0, random (0, 360), 2, random (40, 90));
		TNT1 AA 0 A_CustomMissile ("BDExplosionparticles2", 0, 0, random (0, 360), 2, random (40, 90));
		TNT1 AA 0 A_CustomMissile ("BDExplosionparticles3", 10, 0, random (0, 360), 2, random (40, 90));
        EXPL AAAAA 0 A_CustomMissile ("ExplosionSmokeFast22", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAAA 0 A_CustomMissile ("FireworkSFXType2", 2, 0, random (0, 360), 2, random (10, 80));
		TNT1 A 0 A_SpawnItemEx ("DetectFloorCraterSmall",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 0 A_SpawnItemEx ("DetectCeilCraterSmall",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 0 A_CustomMissile ("BluePlasmaFire", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAAAA 0 A_CustomMissile ("BluePlasmaParticle", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 ABCDE 2 BRIGHT A_SpawnItem("BlueFlare" ,0);
		TNT2 AAAAAAAAA 9 A_CustomMissile ("PlasmaSmoke", 1, 0, random (0, 360), 2, random (0, 160));
		stop;
		
	
  XDeath:
	TNT1 A 0 A_StopSound(5);
    TNT1 AA 0 A_SpawnItemEx("BluePlasmaParticleSpawner", 0, 0, 0, 0, 0, 0, 0, 128);
    TNT1 A 0 A_SpawnItemEx("Plasma_Puff", 0, 0);
	TNT1 A 0 A_PlaySound("RAILIMP");
    TNT1 ABCDE 2 BRIGHT A_SpawnItem("BlueFlare" ,0);
    stop;
  }
}



Class BlueRailgunPuff : Actor
{
  Default{
  renderstyle "Translucent";
  alpha 0.4;
  Scale 1.5;
  radius 0;
  height 0;
  +NOBLOCKMAP;
  +NOGRAVITY;
  Gravity 0.01;
  +NOEXTREMEDEATH;
  +FORCEXYBILLBOARD;
  +THRUACTORS;
  +NOCLIP;
  DamageType "Blast";
  Decal "BulletDecalNew1";
  +DONTSPLASH;
  -EXPLODEONWATER;
  }

States
{
	Death:
		TNT1 AAAA 0 A_SpawnItemEx("BluePlasmaParticleSpawner", 0, 0, 0, 0, 0, 0, 0, 128);
		TNT1 AA 0 A_SpawnItem("WhiteShockwave");
		
		TNT1 A 0 A_Explode(120,5, 0);
//		TNT1 A 0 A_Playsound("explosion/deepimpact", 3);
//		TNT1 A 0 A_PlaySound("FAREXPL", 1);
//		EXPL A 0 Radius_Quake (4, 10, 0, 15, 0);
        TNT1 AAAAAAAAA 0 A_CustomMissile ("ExplosionParticleHeavy", 0, 0, random (0, 360), 2, random (0, 180));
        TNT1 AAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("ExplosionParticleHeavy", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAAAAAAAA 0 A_CustomMissile ("ExplosionParticleVeryFast", 0, 0, random (0, 360), 2, random (0, 360));
        EXPL AAAAA 0 A_CustomMissile ("ExplosionSmokeFast22", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAAA 0 A_CustomMissile ("FireworkSFXType2", 2, 0, random (0, 360), 2, random (10, 80));
		TNT1 A 0 A_SpawnItemEx ("DetectFloorCraterSmall",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 0 A_SpawnItemEx ("DetectCeilCraterSmall",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 0 A_CustomMissile ("BluePlasmaFire", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAAAA 0 A_CustomMissile ("BluePlasmaParticle", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 ABCDE 2 BRIGHT A_SpawnItem("BlueFlare" ,0);
		TNT2 AAAAAAAAA 9 A_CustomMissile ("PlasmaSmoke", 1, 0, random (0, 360), 2, random (0, 160));
		stop;
		
  XDeath:
    TNT1 AA 0 A_SpawnItemEx("BluePlasmaParticleSpawner", 0, 0, 0, 0, 0, 0, 0, 128);
    TNT1 A 0 A_SpawnItemEx("Plasma_Puff", 0, 0);
//	TNT1 A 0 A_PlaySound("RAILIMP");
    TNT1 ABCDE 2 BRIGHT A_SpawnItem("BlueFlare" ,0);
    stop;
}
}

Class BlueRailGunTrail : Actor
{
  Default{
  RenderStyle "Add";
  Scale 0.07;
  Alpha 0.7;
  Translation "0:255=%[0,0,0]:[0,1,1]";
  +NOINTERACTION;
  +NOGRAVITY;
  +CLIENTSIDEONLY;
  }
  States
  {
  Spawn:
    TNT1 A 0;
    TNT1 A 0 A_SetScale(ScaleX, ScaleY -0.005);
    YAE5 A 1 bright A_SpawnItemEx("RailGunTrailSpark", random(4,-4), random(4,-4), random(4,-4), 0, 0, 0, 0, 128, 0);
  Trolololo:
    YAE5 A 0 A_JumpIf(ScaleY <= 0, "NULL");
    YAE5 A 0 A_SetScale(ScaleX -0.01, ScaleY -0.01);
    YAE5 A 1 bright A_FadeOut(0.025);
    Loop;
  }
}

Class RedPuff : FastProjectile
{
  Default{
  Renderstyle "Add";
  DamageType "Incinerate";
//  DeathSound "weapons/StachanovHit";
  Decal "BFGLightning";
  Decal "BigScorch";
  }
  states
  {
  Death:
//    TNT1 A 0 A_PlaySound("Weapons/YamatoExp",5);
    TNT1 A 0 A_Explode(random(18,22),8,0,0);
    TNT1 AAAAAAAAAA 0 A_SpawnItemEx("ObeliskTrailSpark", random(19,-19), random(19,-19), random(19,-19), 0, 0, 0, 0, 128, 0);
    TNT1 A 0 A_SpawnItemEx("ObeliskExplode",0,0,0,0,0,0,0,128,0);
    TNT1 BCD 4;
    stop;
  }
}

Class RedTrail : Actor
{ 
  Default{
  RenderStyle "Add";
  Scale 0.07;
  Alpha 0.7;
  +NOINTERACTION;
  +NOGRAVITY;
  +CLIENTSIDEONLY;
	Translation "0:255=%[0,0,0]:[2,0,0]";
  }
  States
  {
  Spawn:
    TNT1 A 0;
    TNT1 A 0 A_SetScale(ScaleX, ScaleY -0.005);
    YAE4 A 1 bright A_SpawnItemEx("MicrowaveTrailSpark", random(4,-4), random(4,-4), random(4,-4), 0, 0, 0, 0, 128, 0);
  Trolololo:
    YAE4 A 0 A_JumpIf(ScaleY <= 0, "NULL");
    YAE4 A 0 A_SetScale(ScaleX -0.01, ScaleY -0.01);
    YAE4 A 1 bright A_FadeOut(0.025);
    Loop;
  }
}

Class AnnihilatorPuff : FastProjectile
{
 Default{
  Renderstyle "Add";
  DamageType "Incinerate";
  DeathSound "weapons/StachanovHit";
  Decal "BFGLightning";
  Decal "BigScorch";
  }
  states
  {
  Death:
//    TNT1 A 0 A_PlaySound("Weapons/YamatoExp",5);
    TNT1 A 0 A_Explode(random(18,22),8,0,0);
    TNT1 AAAAAAAAAA 0 A_SpawnItemEx("AnnihilatorTrailSpark", random(19,-19), random(19,-19), random(19,-19), 0, 0, 0, 0, 128, 0);
    TNT1 A 0 A_SpawnItemEx("AnnihilatorExplode",0,0,0,0,0,0,0,128,0);
    TNT1 BCD 4;
    stop;
  }
}

Class AnnihilatorExplode : Actor
{
 Default{
  Radius 12;
  Height 8;
  RenderStyle "Add";
  Scale 0.5;
  +NOINTERACTION;
  +NOGRAVITY;
    +CLIENTSIDEONLY;
	}
  states
  {
  Spawn:
    YA36 ABCDEFGHIJKLMNOPQRS 1 bright A_FadeOut(0.05);							//was YAE3
    stop;
  }
}

Class AnnihilatorTrail : Actor
{
  Default{
  RenderStyle "Add";
  Scale 0.07;
  Alpha 0.7;
  +NOINTERACTION;
  +NOGRAVITY;
    +CLIENTSIDEONLY;
	Translation "0:255=%[0,0,0]:[2,0,2]";
	}
  States
  {
  Spawn:
    TNT1 A 0;
    TNT1 A 0 A_SetScale(ScaleX, ScaleY -0.005);
    YA36 A 1 bright A_SpawnItemEx("AnnihilatorTrailSpark", random(4,-4), random(4,-4), random(4,-4), 0, 0, 0, 0, 128, 0);
  Trolololo:
    YA36 A 0 A_JumpIf(ScaleY <= 0, "NULL");
    YA36 A 0 A_SetScale(ScaleX -0.01, ScaleY -0.01);
    YA36 A 1 bright A_FadeOut(0.025);
    Loop;
  }
}

Class AnnihilatorTrailSpark : Actor
{ 
	Default{
    RenderStyle "Add";
    Scale 0.010;
    Alpha 0.95;
	//Translation "0:255=%[0,0,0]:[0,0,1]";
    +NOINTERACTION;
    +NOGRAVITY;
    +CLIENTSIDEONLY;
	}
    States
    {
    Spawn:
	YA36 A 0 NoDelay A_JumpIf(ScaleX <= 0, "NULL");
	YA36 A 0 A_SetScale(ScaleX-0.0008);
    YA36 A 1 bright A_ChangeVelocity (frandom(-0.2, 0.2), frandom(-0.2, 0.2), frandom(-0.2, 0.2), 0);
    YA36 A 2 bright A_FadeOut(0.05);
    Loop;
    }
}

Class AnnihilatorEffect : Actor
{
	Default{
	+CLIENTSIDEONLY;
	+FORCEYBILLBOARD;
	+BRIGHT;
	Renderstyle "Add";
	Scale 0.25;
	+NOINTERACTION;
	SeeSound "";
	Translation "0:255=%[0,0,0]:[1.4,0,1]";
	}
	States
	{
	Spawn:
//		TNT1 A 0 NoDelay A_Playsound("Doom4/Other/Teleport",CHAN_AUTO,1.0,false,1.2)			/// SOUND

	Idle:
		TFOG AB	 1;
		TFOG C 	 1 Light("BlueBigPoint3");
		TFOG D 	 1 Light("BlueBigPoint2");
		TFOG E 	 1 Light("BlueBigPoint1");
		TFOG FGH 1 Light("BlueBigPoint2");
		TFOG IJ	 1 Light("BlueBigPoint3");
		TFOG KL	 1 Light("BlueMediumPoint1");
		TFOG MN	 1 Light("BlueMediumPoint2");
		TFOG OP	 1 Light("BlueMediumPoint3");
		TFOG QR	 1 Light("BlueSmallPoint1");
		TFOG ST	 1 Light("BlueSmallPoint2");
		TFOG UVW 1 Light("BlueSmallPoint3");
		TFOG XYZ 1 ;
		Stop;
	}
}

Class AnnihilatorRailShot : FastProjectile
{
  Default{
  Speed 400;
  Radius 5;
  Height 3;
  Damage 35;
  Renderstyle "Add";
  +RIPPER;
  -CANNOTPUSH;
  +NODAMAGETHRUST;
  +EXTREMEDEATH;
  +FORCERADIUSDMG;
  DamageType "SSG";
  DeathSound "";
  //MissileType "RailGunTrail";
  Decal "Scorch";
  }
  states
  {
  Spawn:
    TNT1 A 0;
//    TNT1 A 1 A_PlaySound("Weapons/StachanovFly",5,1.0,1);
	TNT1 A 1 ;
    Loop;
  Death:
		TNT1 A 0 
		{
		A_SpawnItemEx("AnnihilatorLooker",0,0,0,0,0,0, -240,SXF_NOCHECKPOSITION);
		A_SpawnItemEx("AnnihilatorLooker",0,0,0,0,0,0, 240,SXF_NOCHECKPOSITION);
		A_SpawnItemEx("AnnihilatorLooker",0,0,0,0,0,0, 120,SXF_NOCHECKPOSITION);
		A_SpawnItemEx("AnnihilatorLooker",0,0,0,0,0,0, -120,SXF_NOCHECKPOSITION);
		A_BFGSpray("AnnihilatorEffect", numrays:15, ang:360, distance:450, vrange:42, defdamage:random(90,180),flags:BFGF_MISSILEORIGIN);
		}
		TNT1 AAAA 0 A_SpawnItemEx("PurplePlasmaParticleSpawner", 0, 0, 0, 0, 0, 0, 0, 128);
		TNT1 AA 0 A_SpawnItem("WhiteShockwave");
		
		TNT1 A 0 A_Explode(120,5, 0);
		TNT1 A 0 A_StartSound("Tank/RAILEXP1", 0, 0, 1.0, 0);
		TNT1 A 0 A_SpawnItemEx("RailgunImpactExplosionSFX", 0, 0, 0, 0, 0, 0, 0, 128);
        TNT1 AAA 0 A_CustomMissile ("BDExplosionparticles", 0, 0, random (0, 360), 2, random (40, 90));
		TNT1 AA 0 A_CustomMissile ("BDExplosionparticles2", 0, 0, random (0, 360), 2, random (40, 90));
		TNT1 AA 0 A_CustomMissile ("BDExplosionparticles3", 10, 0, random (0, 360), 2, random (40, 90));
        EXPL AAAAA 0 A_CustomMissile ("ExplosionSmokeFast22", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAAA 0 A_CustomMissile ("FireworkSFXType2", 2, 0, random (0, 360), 2, random (10, 80));
		TNT1 A 0 A_SpawnItemEx ("DetectFloorCraterSmall",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 0 A_SpawnItemEx ("DetectCeilCraterSmall",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 0 A_CustomMissile ("PurplePlasmaFire", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAAAA 0 A_CustomMissile ("PurplePlasmaParticle", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 ABCDE 2 BRIGHT A_SpawnItem("PurpleFlare" ,0);
		TNT2 AAAAAAAAA 9 A_CustomMissile ("PlasmaSmoke", 1, 0, random (0, 360), 2, random (0, 160));
		
		stop;
		
	
  XDeath:
	TNT1 A 0 A_StopSound(5);
    TNT1 AA 0 A_SpawnItemEx("PurplePlasmaParticleSpawner", 0, 0, 0, 0, 0, 0, 0, 128);
    TNT1 A 0 A_SpawnItemEx("Plasma_Puff", 0, 0);
	TNT1 A 0 A_PlaySound("RAILIMP");
    TNT1 ABCDE 2 BRIGHT A_SpawnItem("PurpleFlare" ,0);
    stop;
  }
}

Class PurplePlasmaParticleSpawner : Actor
{
	Default{
  RenderStyle "Add";
  Alpha 0.95;
  Scale 1.1;
  +NoClip;
  +NoBlockMap;
  +NoGravity;
  +Missile;
  +FORCEXYBILLBOARD;
  }
  States
  {
  Spawn:
	TNT1 AA 0 A_CustomMissile ("PurplePlasmaParticle", 0, 0, random (0, 360), 2, random (50, 130));
	//TNT1 AAA 0 A_CustomMissile ("PurplePlasmaParticle", 0, 0, random (0, 360), 2, random (0, 360));
//    TNT1 AA 0 A_CustomMissile ("PlasmaSmoke", 0, 0, random (0, 360), 2, random (0, 360));
    PBEX A 4 BRIGHT ;//A_SpawnItem("PurpleFlare" ,0);
    TNT1 A 1;
    Stop;
  }
}

Class PurplePlasmaParticle : Actor
{
	Default{
  Height 0;
  Radius 0;
  Mass 0;
  +Missile;
  +NoBlockMap;
  -NoGravity;
  //+LowGravity;
  +DontSplash;
  +DoomBounce;
  +FORCEXYBILLBOARD;
  BounceFactor 0.2;
  Gravity 0.8;
  RenderStyle "Add";
  Scale 0.035;
  //Speed 2;
  Speed 12;
  }
  States
  {
  Spawn:
  Death:
    SPVV A 2 Bright A_FadeOut(0.04);
    Loop;
  }
}

Class PurplePlasmaFire: PurplePlasmaParticle
{
	Default{
  +NoGravity;
  -DOOMBOUNCE;
  RenderStyle "Add";
  Scale 0.7;
  Alpha 0.9;
  Speed 0;
  }
  States
  {
  Spawn:
  Death:
    FIR5 ABCDEFGHIJKLMNOP 1 Bright A_FadeOut(0.04);
    Stop;
  }
}

Class PurpleFlare : Actor
{
Default{
+NOINTERACTION;
+NOGRAVITY;
+CLIENTSIDEONLY;
renderstyle "Add";
radius 1;
height 1;
alpha 0.4;
scale 0.4;
}
states
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_Jump(128,2);
		LENB A 2 bright;
		stop;
		TNT1 A 0;
		LENB B 2 bright;
		stop;
	}
}

Class TankFireEffekt : Actor
{
	Default{
	Radius 1;
	Height 1;
	Speed 70;
	Damage 1;
	Projectile;
	+RANDOMIZE;
	+MISSILE;
	}
	States
	{
	Spawn:
		TNT1 A 2;
		Goto Death;
	Death:
		TNT1 A 0;
		TNT1 A 0 Radius_Quake(6, 12, 0, 4, 0);
		TNT1 AAAAA 0 A_SpawnItem("RedFlare");
		TNT1 AAAAA 0 A_CustomMissile ("ExplosionSmoke", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAAAA 0 A_SpawnItem("RedFlare");
		TNT1 A 0 A_Stop;
		TNT1 A 0 A_Recoil(-5);
//		TKFQ A 4 ;
		Stop;
	}
}

/*
Class AnnihilatorTrailSpark : AnnihilatorTrailSpark
{ 
    States
    {
    Spawn:
	YA36 A 0 NoDelay A_JumpIf(ScaleX <= 0, "TNT1");
	YA36 A 0 A_SetScale(ScaleX-0.0008);
    YA36 A 1 bright A_ChangeVelocity (frandom(-0.2, 0.2), frandom(-0.2, 0.2), frandom(-0.2, 0.2), 0);
    YA36 A 2 bright A_FadeOut(0.05);
    Loop;
    }
}
*/