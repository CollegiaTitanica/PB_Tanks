
Class IFVTreads_01 : Actor
{
 States{
  Spawn:
  TNT1 A 0 ;
  IFT1 A 1 ;
  stop;
  }
}
Class IFVTreads_02 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 B 1 ;
  stop;
  }
}
Class IFVTreads_03 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 C 1 ;
  stop;
  }
}
Class IFVTreads_04 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 D 1;
  stop;
  }
}
Class IFVTreads_05 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 E 1;
  stop;
  }
}
Class IFVTreads_06 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 F 1;
  stop;
  }
}
Class IFVTreads_07 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 G 1;
  stop;
  }
}
Class IFVTreads_08 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 H 1;
  stop;
  }
}
Class IFVTreads_09 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 I 1;
  stop;
  }
}
Class IFVTreads_10 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 J 1;
  stop;
  }
}
Class IFVTreads_11 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 K 1;
  stop;
  }
}
Class IFVTreads_12 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 L 1;
  stop;
  }
}
Class IFVTreads_13 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 M 1;
  stop;
  }
}
Class IFVTreads_14 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 N 1;
  stop;
  }
}
Class IFVTreads_15 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 O 1;
  stop;
  }
}
Class IFVTreads_16 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 P 1;
  stop;
  }
}
Class IFVTreads_17 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 Q 1;
  stop;
  }
}
Class IFVTreads_18 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 R 1;
  stop;
  }
}
Class IFVTreads_19 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 S 1;
  stop;
  }
}
Class IFVTreads_20 : Actor
{
 States{
  Spawn:
  TNT1 A 0 ;
  IFT1 T 1;
  stop;
  }
}
Class IFVTreads_21 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 U 1;
  stop;
  }
}
Class IFVTreads_22 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 V 1;
  stop;
  }
}
Class IFVTreads_23 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 W 1;
  stop;
  }
}
Class IFVTreads_24 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 X 1;
  stop;
  }
}
Class IFVTreads_25 : Actor
{
 States{
  Spawn:
  TNT1 A 0 ;
  IFT1 Y 1;
  stop;
  }
}
Class IFVTreads_26 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT1 Z 1;
  stop;
  }
}
Class IFVTreads_27 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT2 A 1;
  stop;
  }
}
Class IFVTreads_28 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT2 B 1;
  stop;
  }
}
Class IFVTreads_29 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT2 C 1;
  stop;
  }
}
Class IFVTreads_30 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT2 D 1;
  stop;
  }
}
Class IFVTreads_31 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT2 E 1;
  stop;
  }
}
Class IFVTreads_32 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT2 F 1;
  stop;
  }
}
Class IFVTreads_33 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT2 G 1;
  stop;
  }
}
Class IFVTreads_34 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT2 H 1;
  stop;
  }
}
Class IFVTreads_35 : Actor
{
 States{
  Spawn: 
  TNT1 A 0 ;
  IFT2 I 1;
  stop;
  }
}

Class IFVHull : Actor
{
	Default
	{
		//+THRUACTORS;
		//+NOTIMEFREEZE;
		//+CLIENTSIDEONLY;
		+FLOORCLIP;
		+NOBLOCKMAP;
		+SOLID;
	//	+INTERPOLATEANGLES;
		//Health 2000;
		+THRUSPECIES;
		+INTERPOLATEANGLES
		Species "Abrams";
		Mass 99999;
		Radius 73;
		Height 48;
		//Gravity 0;
	}
States
{
Spawn:
		TNT1 A 0;
		IFVH A 1;
		
stop;
}}


Class IFVTurret: IFVHull
{
States
{
Spawn:
TNT1 A 0;
TNT1 A 0 A_Stop;
TNT1 A 0 ;
IFVT A 1;
Stop;
}}

Class IFV: SwitchableDecoration
{
	int user_stationedifvbasedirection;
	default{
    Radius 68;
	Height 74;
	+SOLID;
	+USESPECIAL;
	MONSTER;
	+FRIENDLY;
	-COUNTKILL;
	+SHOOTABLE;
	+LOOKALLAROUND;
//	+THRUACTOR;
	+NOINFIGHTING;
	+NORADIUSDMG;
	-COUNTKILL;
	damagefactor "stomp", 0;
	damagefactor "Incinerate", 0.0;
//	damagefactor "normal", 0.0;
	damagefactor "Treads", 0.0;
	MaxTargetRange 120;
	PainChance "Repair", 255;
	BloodType "TankBlood", "TankBlood", "TankBlood";
	Activation THINGSPEC_Activate | THINGSPEC_ThingTargets | THINGSPEC_NoDeathSpecial;
	Mass 9999;
	Speed 0;
	health 900;
	damagefactor "slime", 0.0;
	damagefactor "Repair", 1.0; damagefactor "CheckRepair", 0.0;
	damagefactor "Head", 0.0;	damagefactor "FriendBullet", 0.0;    damagefactor "Taunt", 0.0;    damagefactor "KillMe", 0.0;
	damagefactor "Shotgun", 0.0;    damagefactor "Shrapnel", 0.0;    damagefactor "Blood", 0.0;    damagefactor "BlueBlood", 0.0;
	damagefactor "Explosives", 6.5; damagefactor "bullet", 0.0; damagefactor "monsterbullet", 0.0; damagefactor "shotgun", 0; damagefactor "monstershotgun", 0.0; damagefactor "monsterminigun", 0.0;
	damagefactor "GreenBlood", 0.0;    damagefactor "MinorHead", 0.0;    damagefactor "Decaptate", 0.0;	damagefactor "MonsterKnocked", 0.0;
    damagefactor "CancelTeleportFog", 0.0;	damagefactor "BHFTOnBarrel", 0.0;	damagefactor "GibRemoving", 0.0;	damagefactor "SuperPunch", 0.0;
	damagefactor "HelperMarineFatallity", 0.0;	damagefactor "Leg", 0.0;	damagefactor "SpawnMarine", 0.0;	damagefactor "TeleportRemover", 0.0;
	damagefactor "CauseObjectsToSplash", 0.0; damagefactor "Trample", 0.0; damagefactor "Minigun", 0.1; damagefactor "Machinegun", 0.1;
	damagefactor "TankWeakSpot", 3.0; 
	damagefactor "Plasma", 2.5; damagefactor "Plasma2", 2.5;
	damagefactor "Desintegrate", 4.5;
	damagefactor "Blast", 0.0;
	damagefactor "ExplosiveImpact", 0.5;
	damagefactor "Burn", 0.0;
	damagefactor "Arm", 0.0;
	damagefactor "SSG", 0.0;
	damagefactor "Head", 0.0;
	damagefactor "Cutless", 0.0;
//	damagefactor "None", 0.0;
	damagefactor "TankShell", 0.6;
	damagefactor "Explosive", 0.6;
	damagefactor "HeavyTankMachineGun", 0.0;
	damagefactor "Cut", 0.0;
	damagefactor "Nailgun", 0.0;
	damagefactor "Eat", 0.0;
	}
		IFVHull ifva;

/*	
			override void BeginPlay() 
		{
		super.BeginPlay();
		IFVSpawnHitBoxes();
		}
	
		private void IFVSpawnHitBoxes() 
		{
		IFVSpawnHitBox("IFV_Hitbox", (74, 0, 0), 75, 128);
		IFVSpawnHitBox("IFV_Hitbox", (-74, 0, 0), 75, 128);
		}
*/	
    States
    {
    Spawn:
		IFVH A 1;
		
	    TNT1 A 1 
		{
			ifva = IFVHull(Spawn("IFVHull",pos));
		}
		TNT1 A 0 Thing_ChangeTID(0, 261);
		TNT1 A 0 ACS_ExecuteAlways(137, 0, 0, 0, 0);//Check vehicle initial angle.
		TNT1 A 1 A_ChangeFlag("FRIENDLY", 0);
		TNT1 A 0 A_SpawnItem("IFVTurret");
		TNT1 A 0 Thing_ChangeTID(0, 0);
		IFVH A 0 A_ChangeFlag("THRUACTOR", 0);
		TNT1 A 0 A_ChangeFlag("FRIENDLY", 1);
				

		Goto StandingHere;
		
	  StandingHere:
		TNT1 A 0;
		TNT1 A 0 ACS_NamedExecuteAlways("Leaving IFV", 0, 0, 0, 0);//SpawnVehicleBase
		TNT1 A 1;
		TNT1 A 0 A_SpawnItem("IFVTurret");
		TNT1 A 0 A_SpawnItem("IFVHull");
		TNT1 A 0 A_SpawnItem("IFVTreads_01");
		Loop;
		
	Active:
		TNT1 A 0 ;
		TNT1 C 0 A_ChangeFlag("FRIENDLY", 0);
		//TNT1 A 0 A_Look
		TNT1 A 0 Thing_ChangeTID(0, 261);
		TNT1 A 0 ACS_ExecuteAlways(130, 0, 0, 0, 0);//Check Vehicle Health	
		//TNT1 A 0 A_Chase("","",CHF_DONTMOVE )
		TNT1 A 0 A_GiveToTarget("CheckingMorphingPlayerHealth", 1);
		TNT1 A 0 A_SpawnItem("IFVTurret");
		NULL A 3;
		TNT1 A 0 A_GiveToTarget("IFVMorpher", 1);
		TNT1 A 0 A_GiveToTarget("IFVGunAmmo", 800);
		TNT1 A 0 A_GiveToTarget("IFVMissileAmmo", 12);
		TNT1 A 0 Thing_ChangeTID(0, 261);
		TNT1 A 0 A_NoBlocking;
		NULL A 1;
		TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
		NULL A 10;
		TNT1 A 0 
		{
			Thing_ChangeTID(0, 0);
			if (ifva)
				ifva.destroy();
		}
		NULL A 1;
		Stop;
	Death:	
	TNT1 A 1;
	TNT1 A 0 A_SpawnItem("BigExplosion1112");
	TNT1 A 0 A_PlaySound("weapons/explode");
	TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
	TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
	TNT1 A 0 A_Scream;
	NULL AAAAAA 0 A_CustomMissile ("MetalShard1", 96, 0, random (0, 360), 2, random (0, 180));
	NULL AAAAAA 0 A_CustomMissile ("MetalShard2", 96, 0, random (0, 360), 2, random (0, 180));
	NULL AAAAAAAAA 0 A_CustomMissile ("GlassShard", 96, 0, random (0, 360), 2, random (0, 360));
//	TNT1 A 0 A_SpawnItem("DestroyedArmouredVehicle");
	ELEC A 0 A_Explode(100, 250);
	TNT1 A 15;
	TNT1 A 0;
	Stop;
	
		Pain.Repair:
		 TNT1 A 0;
		 TNT1 A 0 A_ChangeFLag("NOPAIN", 1);
		 TNT1 A 0 HealThing(5);
		 IFVT A 1;
		 TNT1 A 0 HealThing(5);
		 TNT1 A 0 A_ChangeFLag("NOPAIN", 0);
		 Goto StandingHere;
	}
}



Class IFVUsed: IFV
{
	Default{
    Radius 68;
	Height 74;
	}
    States
    {
	Spawn:

		TNT1 A 0;
	    TNT1 A 1;
		TNT1 A 0 ACS_NamedExecuteAlways("Leaving IFV", 0, 0, 0, 0);//SpawnVehicleBase
		TNT1 A 0 Thing_ChangeTID(0, 261);
		TNT1 A 1 A_ChangeFlag("FRIENDLY", 0);
		TNT1 A 5 ;
		TNT1 A 0 Thing_ChangeTID(0, 0);
		TNT1 A 0 A_ChangeFlag("THRUACTOR", 0);
		TNT1 A 0 A_ChangeFlag("FRIENDLY", 1);
		TNT1 A 0 ACS_Execute(129);
		Goto StandingHere;
	
	IsOnline:
		TNT1 A 0;
		TNT1 A 1;
//		TNT1 A 0 A_TAkeInventory("ifvbasedirection", 500);
		Goto StandingHere;
		
	
	
	Active:
		TNT1 A 0 ;
		TTR1 A 0 A_ChangeFlag("FRIENDLY", 0);
		TNT1 A 0 Thing_ChangeTID(0, 261);
		TNT1 A 0 ACS_ExecuteAlways(130, 0, 0, 0, 0);//Check Vehicle Health
		//TNT1 A 0 A_Chase("","",CHF_DONTMOVE )
		TNT1 A 0 A_GiveToTarget("CheckingMorphingPlayerHealth", 1);
		NULL A 3;
		TNT1 A 0 A_GiveToTarget("IFVMorpher", 1);
		TNT1 A 0 Thing_ChangeTID(0, 261);
		TNT1 A 0 A_NoBlocking;
		NULL A 1;
		TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
		NULL A 10;
		TNT1 A 0 Thing_ChangeTID(0, 0);
		Stop;
	}
}

	


Class IFVSwitch : PowerMorph 
{ 
	default
	{
	PowerMorph.PlayerClass "PlayerIFV";
	}
}



Class IFVMorpher : CustomInventory 
{
  States
  {
  PickUp:
  TNT1 A 1;
  TNT1 A 0 ACS_ExecuteAlways(134, 0, 0, 0, 0);//Get into Tank
  TNT1 A 0 A_GiveInventory("IFVMorphActivation");
  TNT1 A 0 A_SpawnItem("CancelTeleportFog");
  TNT1 A 1;
  Stop;
  }
 }
 


Class IFVMorphActivation : PowerupGiver
{
  default{
  Powerup.Type "IFVSwitch";
  Powerup.Duration 252000;
  +INVENTORY.AUTOACTIVATE;
  +INVENTORY.ALWAYSPICKUP;
  Inventory.MaxAmount 1;
  Health 100;
  GibHealth 1;
  Mass 9999;
  Height 96;
  Radius 32;
  }
  States
  {
  Spawn:
  TNT1 A 100;
  Stop;
  
  PickUp:
  TNT1 A 1;
  TNT1 A 1;
  Stop;
  }
 }
 
 


Class PlayerIFV : PlayerPawn
{
    int ifvbasedirection;
	int IFV_Animation;
	int Left_Tread_Display;
	int Right_Tread_Display;
	Default{
	Speed 0;
	Radius 72;
	Height 74;
	Mass 9999;
	PainChance 0;
	health 900;
	-PICKUP;
	Speed 0.01;
	player.viewheight	90;
    player.attackzoffset 90;
	MaxStepHeight 32;
	Player.MorphWeapon "IFVGun";
    Player.JumpZ 0;
	damagefactor "slime", 0.0;
	damagefactor "Treads", 0.0;
	BloodType "TankBlood", "TankBlood", "TankBlood";
	damagefactor "stomp", 0;
	+NOSKIN;
	+NORADIUSDMG;
	+FORCERADIUSDMG;
	+FIXMAPTHINGPOS;
	+DONTRIP;
	-CANUSEWALLS;
	-PICKUP;
	damagefactor "Repair", 0.0; damagefactor "CheckRepair", 0.0;
	damagefactor "Head", 0.0;	damagefactor "FriendBullet", 0.0;    damagefactor "Taunt", 0.0;    damagefactor "KillMe", 0.0;
	damagefactor "Shotgun", 0.0;    damagefactor "Shrapnel", 0.0;    damagefactor "Blood", 0.0;    damagefactor "BlueBlood", 0.0;
	damagefactor "Explosives", 0.5; damagefactor "bullet", 0.0; damagefactor "monsterbullet", 0.0; damagefactor "shotgun", 0; damagefactor "monstershotgun", 0.0; damagefactor "monsterminigun", 0.0;
	damagefactor "GreenBlood", 0.0;    damagefactor "MinorHead", 0.0;    damagefactor "Decaptate", 0.0;	damagefactor "MonsterKnocked", 0.0;
    damagefactor "CancelTeleportFog", 0.0;	damagefactor "BHFTOnBarrel", 0.0;	damagefactor "GibRemoving", 0.0;	damagefactor "SuperPunch", 0.0;
	damagefactor "HelperMarineFatallity", 0.0;	damagefactor "Leg", 0.0;	damagefactor "SpawnMarine", 0.0;	damagefactor "TeleportRemover", 0.0;
	damagefactor "CauseObjectsToSplash", 0.0; damagefactor "Trample", 0.0; damagefactor "Minigun", 0.1; damagefactor "Machinegun", 0.1;
	damagefactor "TankWeakSpot", 3.0;
	damagefactor "Plasma", 2.5; damagefactor "Plasma2", 2.5;
	damagefactor "Desintegrate", 4.5;
	damagefactor "Blast", 0.0;
	damagefactor "ExplosiveImpact", 0.5;
	damagefactor "Burn", 0.0;
	damagefactor "Arm", 0.0;
	damagefactor "SSG", 0.0;
	damagefactor "Head", 0.0;
	damagefactor "Cutless", 0.0;
//	damagefactor "None", 0.0;
	damagefactor "TankShell", 0.6;
	damagefactor "Explosive", 0.6;
	damagefactor "HeavyTankMachineGun", 0.0;
	damagefactor "Cut", 0.0;
	damagefactor "Nailgun", 0.0;
	damagefactor "Eat", 0.0;
	}
	
			IFVHull IFVA;
		private double curangle;
		
		override void BeginPlay() 
		{
		super.BeginPlay();
		SpawnHitBoxes();
		}
	
		private void SpawnHitBoxes() 
		{
		SpawnHitBox("Vehicle_Hitbox", (74, 0, 0), 75, 128);
		SpawnHitBox("Vehicle_Hitbox", (-74, 0, 0), 75, 128);
		}

	override void Tick()
	{
		curangle = ifvbasedirection;
		super.Tick();
		if (!IFVA) {
			IFVA = IFVHull(Spawn("IFVHull", pos)); 
			IFVA.master = self;
		}
		else {
			IFVA.A_SetAngle(ifvbasedirection,SPF_INTERPOLATE);	
			IFVA.SetOrigin(pos,false);
		}
	}
	
	
	States
	{	
		
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ThrustTHingZ(0, 0, -1, 1);
		IFVH A 1 ;
	Spawn2:
	    TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		TNT1 A 0 A_TakeInventory("Accelerate", 1);
		TNT1 A 0 A_TakeInventory("BackPedal", 1);
		TNT1 A 0 ACS_ExecuteAlways(888, 0, 0, 0, 0);
//		TNT1 A 0 ACS_ExecuteAlways(995, 0, 0, 0, 0);
		IFVH A 1{
				 {IFVA = SpawnIFVHull("IFVHull");}
				 A_SpawnItemEx ("IFVTurret" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
				}
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 A_TakeInventory("IFVMainGun", 1);
//		TNT1 A 0 A_Print ("a", 4, "TUTO1");
	Goto Stay;

		

	ExitVehicle:
	TNT1 A 1;
	
	TNT1 A 0 A_TakeInventory("PressedUse", 1);
	
	TNT1 A 0 A_SpawnItemEx ("TransferPlayerOutOfVehicle", 0, 0, 150);
	
	IFVH A 1;
	TNT1 A 0 {IFVA = SpawnIFVHull("IFVHull");}
	IFVH A 1;
	TNT1 A 0 {IFVA = SpawnIFVHull("IFVHull");}
	IFVH A 1;
	TNT1 A 0 {IFVA = SpawnIFVHull("IFVHull");}
	
	TNT1 A 0 A_JumpIfInventory("CanLeaveVehicle", 1, "CanExit");
	TNT1 A 0 A_Print("Can't leave from this direction", 1);
	Goto Stay;
	
	CanExit:
	TNT1 A 0;
	TNT1 A 2;
	TNT1 A 0 A_TakeInventory("PressedUse", 1);
	TNT1 A 0 A_TakeInventory("CanLeaveVehicle", 1);
	TNT1 A 0 ACS_Execute(135);
	TNT1 A 0 ACS_Execute(871);
	TNT1 A 0 A_SpawnItemEx ("IFVUsed", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	Goto FinishExit;

	FinishExit:
	TNT1 A 0 A_TakeInventory("PressedUse", 1);
	TNT1 AAA 10 A_TakeInventory("PressedUse", 1);
	TNT1 A 0 A_TakeInventory("PressedUse", 1);
	Goto Stay;
	
		
		
	TurnLeft:
		TNT1 A 0;
		IFVH A 1 
				{	
					A_JumpIf(ifvbasedirection > 359, "TurnLeft2");
					A_SpawnItemEx ("IFVTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
					IFVA = SpawnIFVHull("IFVHull");
					Left_Tread_Display = IFV_Animation;
					 Switch(Left_Tread_Display)
				   {
					default:
						break;
				   case 0:  Left_Tread_Display = 1;
				   case 1:  A_SpawnItemEx ("IFVTreads_01" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 2:  A_SpawnItemEx ("IFVTreads_02" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 3:  A_SpawnItemEx ("IFVTreads_03" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 4:  A_SpawnItemEx ("IFVTreads_04" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 5:  A_SpawnItemEx ("IFVTreads_05" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 6:  A_SpawnItemEx ("IFVTreads_06" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 7:  A_SpawnItemEx ("IFVTreads_07" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 8:  A_SpawnItemEx ("IFVTreads_08" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 9:  A_SpawnItemEx ("IFVTreads_09" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 10: A_SpawnItemEx ("IFVTreads_10" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 11: A_SpawnItemEx ("IFVTreads_11" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 12: A_SpawnItemEx ("IFVTreads_12" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 13: A_SpawnItemEx ("IFVTreads_13" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 14: A_SpawnItemEx ("IFVTreads_14" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 15: A_SpawnItemEx ("IFVTreads_15" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 16: A_SpawnItemEx ("IFVTreads_16" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 17: A_SpawnItemEx ("IFVTreads_17" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 18: A_SpawnItemEx ("IFVTreads_18" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 19: A_SpawnItemEx ("IFVTreads_19" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 20: A_SpawnItemEx ("IFVTreads_20" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 21: A_SpawnItemEx ("IFVTreads_21" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 22: A_SpawnItemEx ("IFVTreads_22" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 23: A_SpawnItemEx ("IFVTreads_23" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 24: A_SpawnItemEx ("IFVTreads_24" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 25: A_SpawnItemEx ("IFVTreads_25" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 26: A_SpawnItemEx ("IFVTreads_26" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 27: A_SpawnItemEx ("IFVTreads_27" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 28: A_SpawnItemEx ("IFVTreads_28" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 29: A_SpawnItemEx ("IFVTreads_29" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 30: A_SpawnItemEx ("IFVTreads_30" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 31: A_SpawnItemEx ("IFVTreads_31" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 32: A_SpawnItemEx ("IFVTreads_32" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 33: A_SpawnItemEx ("IFVTreads_33" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 34: A_SpawnItemEx ("IFVTreads_34" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 35: A_SpawnItemEx ("IFVTreads_35" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
					}
					
				}
		TNT1 A 0 { ifvbasedirection += 6; }
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		Goto CheckIfStillMoves;
	
	TurnLeft2:
		TNT1 A 0 A_SetUserVar("ifvbasedirection", 0);
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		Goto CheckIfStillMoves;
		
	TurnRight:
		TNT1 A 0;
		IFVH A 1 {
					A_SpawnItemEx ("IFVTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
					IFVA = SpawnIFVHull("IFVHull");
		
					Right_Tread_Display = IFV_Animation;
					 Switch(Right_Tread_Display)
						{
					default:
						break;
				   case 0:  Right_Tread_Display = 1;
				   case 1:  A_SpawnItemEx ("IFVTreads_01" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 2:  A_SpawnItemEx ("IFVTreads_02" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 3:  A_SpawnItemEx ("IFVTreads_03" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 4:  A_SpawnItemEx ("IFVTreads_04" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 5:  A_SpawnItemEx ("IFVTreads_05" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 6:  A_SpawnItemEx ("IFVTreads_06" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 7:  A_SpawnItemEx ("IFVTreads_07" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 8:  A_SpawnItemEx ("IFVTreads_08" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 9:  A_SpawnItemEx ("IFVTreads_09" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 10: A_SpawnItemEx ("IFVTreads_10" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 11: A_SpawnItemEx ("IFVTreads_11" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 12: A_SpawnItemEx ("IFVTreads_12" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 13: A_SpawnItemEx ("IFVTreads_13" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 14: A_SpawnItemEx ("IFVTreads_14" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 15: A_SpawnItemEx ("IFVTreads_15" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 16: A_SpawnItemEx ("IFVTreads_16" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 17: A_SpawnItemEx ("IFVTreads_17" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 18: A_SpawnItemEx ("IFVTreads_18" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 19: A_SpawnItemEx ("IFVTreads_19" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 20: A_SpawnItemEx ("IFVTreads_20" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 21: A_SpawnItemEx ("IFVTreads_21" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 22: A_SpawnItemEx ("IFVTreads_22" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 23: A_SpawnItemEx ("IFVTreads_23" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 24: A_SpawnItemEx ("IFVTreads_24" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 25: A_SpawnItemEx ("IFVTreads_25" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 26: A_SpawnItemEx ("IFVTreads_26" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 27: A_SpawnItemEx ("IFVTreads_27" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 28: A_SpawnItemEx ("IFVTreads_28" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 29: A_SpawnItemEx ("IFVTreads_29" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 30: A_SpawnItemEx ("IFVTreads_30" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 31: A_SpawnItemEx ("IFVTreads_31" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 32: A_SpawnItemEx ("IFVTreads_32" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 33: A_SpawnItemEx ("IFVTreads_33" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 34: A_SpawnItemEx ("IFVTreads_34" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 35: A_SpawnItemEx ("IFVTreads_35" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				}
			}
		
		TNT1 A 0 { ifvbasedirection -= 6; }
		TNT1 A 0 A_JumpIf(ifvbasedirection == 0, "TurnRIght2");
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		Goto CheckIfStillMoves;
	
	TurnRight2:
		TNT1 A 0 A_SetUserVar("ifvbasedirection", 360);
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		Goto CheckIfStillMoves	;
	
	
	CheckIfStillMoves:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "ExitVehicle");
		TNT1 A 0 A_JumpIfInventory("Accelerate", 1, "Accelerate");
		TNT1 A 0 A_JumpIfInventory("BackPedal", 1, "BackPedal");
		TNT1 A 0 A_JumpIfInventory("TurnLeft", 1, "TurnLeft");
		TNT1 A 0 A_JumpIfInventory("TurnRight", 1, "TurnRight");
		TNT1 A 0 A_StopSound(5);
//		TNT1 A 0 A_PlaySound("TANK2", 5, 1, 1);
		TNT1 A 0 A_PlaySound("IFV/IFVMOV2", 5, 1, 0, 0);
		
	Stay:
		
//		TNT1 A 0 A_PlaySound("TANK2", 5, 1, 1);
		TNT1 A 0 {IFVA = SpawnIFVHull("IFVHull");}
		TNT1 A 0 A_SpawnItemEx ("IFVTreads_01" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "ExitVehicle");
		TNT1 A 0 A_JumpIfInventory("BackPedal", 1, "BackPedal");
		TNT1 A 0 A_JumpIfInventory("Accelerate", 1, "Accelerate");
		IFVH A 1 A_SpawnItemEx ("IFVTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_JumpIF(velz < 0, "Falling");
		Goto Stay;
		
	
	Pain.TracksDamaged:
	    TNT1 A 0;
		TNT1 A 0 ;
		
		TNT1 A 0 A_Jump(32, "DestroyTracks");
		TNT1 A 0 {IFVA = SpawnIFVHull("IFVHull");}
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "ExitVehicle");
		TNT1 A 0 A_JumpIfInventory("BackPedal", 1, "BackPedal");
		TNT1 A 0 A_JumpIfInventory("Accelerate", 1, "Accelerate");
		IFVH A 1 A_SpawnItemEx ("IFVTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		Goto Stay;
		
		
	
	Accelerate:
		
		TNT1 A 0 A_PlaySound("IFV/IFVMOV", 5, 1, 1);
		TNT1 A 0 A_SpawnItemEx ("IFVTreadsDamage" , 100, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY);
		
		TNT1 A 0 A_SpawnItemEx("TankStep", 0, 0, 8, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItemEx ("IFVTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
//		TNT1 A 0 ThrustThing(ifvbasedirection*256/360, 1, 1);
		TNT1 A 0 {IFVA = SpawnIFVHull("IFVHull");}
		IFT1 A 1 {	
					If(IFV_Animation == 36)
					IFV_Animation == 1;
					 Switch(IFV_Animation)
				   {
					default:
						break;
				   case 0: IFV_Animation = 1;
				   case 1:  A_SpawnItemEx ("IFVTreads_01" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 2:  A_SpawnItemEx ("IFVTreads_02" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 3:  A_SpawnItemEx ("IFVTreads_03" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 4:  A_SpawnItemEx ("IFVTreads_04" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 5:  A_SpawnItemEx ("IFVTreads_05" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 6:  A_SpawnItemEx ("IFVTreads_06" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 7:  A_SpawnItemEx ("IFVTreads_07" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 8:  A_SpawnItemEx ("IFVTreads_08" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 9:  A_SpawnItemEx ("IFVTreads_09" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 10: A_SpawnItemEx ("IFVTreads_10" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 11: A_SpawnItemEx ("IFVTreads_11" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 12: A_SpawnItemEx ("IFVTreads_12" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 13: A_SpawnItemEx ("IFVTreads_13" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 14: A_SpawnItemEx ("IFVTreads_14" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 15: A_SpawnItemEx ("IFVTreads_15" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 16: A_SpawnItemEx ("IFVTreads_16" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 17: A_SpawnItemEx ("IFVTreads_17" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 18: A_SpawnItemEx ("IFVTreads_18" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 19: A_SpawnItemEx ("IFVTreads_19" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 20: A_SpawnItemEx ("IFVTreads_20" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 21: A_SpawnItemEx ("IFVTreads_21" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 22: A_SpawnItemEx ("IFVTreads_22" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 23: A_SpawnItemEx ("IFVTreads_23" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 24: A_SpawnItemEx ("IFVTreads_24" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 25: A_SpawnItemEx ("IFVTreads_25" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 26: A_SpawnItemEx ("IFVTreads_26" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 27: A_SpawnItemEx ("IFVTreads_27" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 28: A_SpawnItemEx ("IFVTreads_28" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 29: A_SpawnItemEx ("IFVTreads_29" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 30: A_SpawnItemEx ("IFVTreads_30" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 31: A_SpawnItemEx ("IFVTreads_31" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 32: A_SpawnItemEx ("IFVTreads_32" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 33: A_SpawnItemEx ("IFVTreads_33" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 34: A_SpawnItemEx ("IFVTreads_34" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
				   case 35: A_SpawnItemEx ("IFVTreads_35" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation += 1; break;
					}
					if (IFV_Animation > 35) IFV_Animation = 1;
					
				}
		
		TNT1 A 0 A_SpawnItemEx ("IFVTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);												//was 1
		TNT1 A 0 ThrustThing(ifvbasedirection*256/360, 1, 1);
		TNT1 A 0 {IFVA = SpawnIFVHull("IFVHull");}
		
		
		TNT1 A 0 A_JumpIfInventory("TurnLeft", 1, "TurnLeft");
		TNT1 A 0 A_JumpIfInventory("TurnRight", 1, "TurnRight");
		
		TNT1 A 0 A_SpawnItemEx ("IFVTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);												//was 1
		TNT1 A 0 ThrustThing(ifvbasedirection*256/360, 1, 1);
		TNT1 A 0 {IFVA = SpawnIFVHull("IFVHull");}
		TNT1 A 0 A_JumpIF(velz < 0, "Falling");
		Goto CheckIfStillMoves;
		
		
	Backpedal:
		
		
		TNT1 A 0 A_PlaySound("IFV/IFVMOV", 5, 1, 1);
		TNT1 A 0 A_SpawnItemEx("TankStep", 0, 0, 8, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItemEx ("IFVTreadsDamage" , -100, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY);
		
		IFVH A 0 A_SpawnItemEx ("IFVTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 {IFVA = SpawnIFVHull("IFVHull");}
		
		IFVH A 1 {	
					If(IFV_Animation == 36)
					IFV_Animation == 1;
					 Switch(IFV_Animation)
				   {
					default:
						break;
				   case 0: IFV_Animation = 35;
				   case 1:  A_SpawnItemEx ("IFVTreads_01" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 2:  A_SpawnItemEx ("IFVTreads_02" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 3:  A_SpawnItemEx ("IFVTreads_03" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 4:  A_SpawnItemEx ("IFVTreads_04" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 5:  A_SpawnItemEx ("IFVTreads_05" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 6:  A_SpawnItemEx ("IFVTreads_06" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 7:  A_SpawnItemEx ("IFVTreads_07" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 8:  A_SpawnItemEx ("IFVTreads_08" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 9:  A_SpawnItemEx ("IFVTreads_09" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 10: A_SpawnItemEx ("IFVTreads_10" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 11: A_SpawnItemEx ("IFVTreads_11" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 12: A_SpawnItemEx ("IFVTreads_12" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 13: A_SpawnItemEx ("IFVTreads_13" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 14: A_SpawnItemEx ("IFVTreads_14" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 15: A_SpawnItemEx ("IFVTreads_15" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 16: A_SpawnItemEx ("IFVTreads_16" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 17: A_SpawnItemEx ("IFVTreads_17" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 18: A_SpawnItemEx ("IFVTreads_18" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 19: A_SpawnItemEx ("IFVTreads_19" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 20: A_SpawnItemEx ("IFVTreads_20" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 21: A_SpawnItemEx ("IFVTreads_21" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 22: A_SpawnItemEx ("IFVTreads_22" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 23: A_SpawnItemEx ("IFVTreads_23" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 24: A_SpawnItemEx ("IFVTreads_24" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 25: A_SpawnItemEx ("IFVTreads_25" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 26: A_SpawnItemEx ("IFVTreads_26" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 27: A_SpawnItemEx ("IFVTreads_27" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 28: A_SpawnItemEx ("IFVTreads_28" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 29: A_SpawnItemEx ("IFVTreads_29" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 30: A_SpawnItemEx ("IFVTreads_30" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 31: A_SpawnItemEx ("IFVTreads_31" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 32: A_SpawnItemEx ("IFVTreads_32" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 33: A_SpawnItemEx ("IFVTreads_33" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 34: A_SpawnItemEx ("IFVTreads_34" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
				   case 35: A_SpawnItemEx ("IFVTreads_35" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); IFV_Animation -= 1; break;
					}
				//	if (IFV_Animation = 0) IFV_Animation = 35;
					
				}
//		TNT1 A 0 ;//ThrustThing(ifvbasedirection*256/360+128, 1, 1);
		TNT1 A 0 {IFVA = SpawnIFVHull("IFVHull");}
		TNT1 A 0 ThrustThing(ifvbasedirection*256/360+128, 1, 1);
		
		TNT1 A 0 A_JumpIfInventory("TurnRight", 1, "TurnLeft");
		TNT1 A 0 A_JumpIfInventory("TurnLeft", 1, "TurnRight");
		
		IFVH A 0 A_SpawnItemEx ("IFVTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
//		TNT1 A 0 ThrustThing(ifvbasedirection*256/360+128, 1, 1);
		TNT1 A 0 {IFVA = SpawnIFVHull("IFVHull");}
		TNT1 A 0 A_JumpIF(velz < 0, "Falling");
		Goto CheckIfStillMoves;
		
		
	Falling:
		TNT1 A 0;
		TNT1 A 0 A_CheckFloor("CheckIfStillMoves");
	
	FallingForReal:
		TNT1 A 0;
		IFVH A 1 {
				 A_SpawnItemEx ("IFVTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
				 {IFVA = SpawnIFVHull("IFVHull");}
				 A_SpawnItemEx ("IFVTreads_01" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
				 }
		TNT1 A 0 A_JumpIF(velz == 0, "CrashIntoGround");
		TNT1 A 0 A_GiveInventory("VehicleFallingCount", 1);
		Loop;
		
	CrashIntoGround:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfinventory("VehicleFallingCount", 6, "CrashIntoGroundViolently");
		IFVH A 1 {
				 A_SpawnItemEx ("IFVTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
				 {IFVA = SpawnIFVHull("IFVHull");}
				 A_SpawnItemEx ("IFVTreads_01" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
				 }
		TNT1 A 0 A_SpawnItem("CrashTankIntotheGround1");
		TNT1 A 0 A_SpawnItem("CrashTankIntotheGround2");
		TNT1 A 0 A_SpawnItemEx ("LargeMassWaterImpact", 0, 0, -10);
		TNT1 A 0 A_TakeInventory("VehicleFallingCount", 100);
		Goto Stay;
		
	CrashIntoGroundViolently:
		TNT1 A 0;
		IFVH A 1 {
				 A_SpawnItemEx ("IFVTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
				 {IFVA = SpawnIFVHull("IFVHull");}
				 A_SpawnItemEx ("IFVTreads_01" , 0, 0, 0, 0, 0, 0, ifvbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
				 }
		TNT1 A 0 A_SpawnItem("CrashTankIntotheGround1");
		TNT1 A 0 A_SpawnItem("CrashTankIntotheGround2");	
		TNT1 A 0 A_SpawnItemEx ("ExplosionSplashSpawner", 0, 0, -10);
		
		TNT1 AAAA 0 A_CustomMissile ("ExplosionSmoke", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 A 0 A_TakeInventory("VehicleFallingCount", 100);
		TNT1 A 0 A_SetPitch(-8.0 + pitch);
		IFVH A 1 ;
		TNT1 A 0 {IFVA = SpawnIFVHull("IFVHull");}
		TNT1 A 0 A_SetPitch(4.0 + pitch);
		IFVH A 1;
		TNT1 A 0 {IFVA = SpawnIFVHull("IFVHull");}
		TNT1 A 0 A_SetPitch(4.0 + pitch);
		Goto Stay;
		
		
		
	Death:	
	XDeath:
	TNT1 A 0 ACS_ExecuteAlways(871, 0, 0, 0, 0);
    TNT1 A 1;
	TNT1 A 0 A_SpawnItem("BigExplosion1112");
	TNT1 A 0 A_PlaySound("weapons/explode");
	TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
	TNT1 A 0 A_Scream;
	TNT1 A 0 A_NoBlocking;
	NULL AAAAAA 0 A_CustomMissile ("MetalShard1", 96, 0, random (0, 360), 2, random (0, 180));
	NULL AAAAAA 0 A_CustomMissile ("MetalShard2", 96, 0, random (0, 360), 2, random (0, 180));
	NULL AAAAAAAAA 0 A_CustomMissile ("GlassShard", 96, 0, random (0, 360), 2, random (0, 360));
	ELEC A 0 A_Explode(100, 250);
//	TNT1 A 0 A_SpawnItem("DestroyedArmouredVehicle");
	8762 A 5;
	TNT1 A 0 A_TakeInventory("IFVGun", 1);
	8762 A 100;
	8762 A -1;
	Stop;
	
	
	}
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Vehicle's weapons and misc
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



Class IFVReady : Ammo
{
	default
   {
   Inventory.Amount 0;
   Inventory.MaxAmount 100;
   Ammo.BackpackAmount 0;
   Ammo.BackpackMaxAmount 100;
//   Inventory.Icon TNT1A0;
   }
}

Class IFVGun : DoomWeapon
{
	default
	{
//	Game Doom;
	Weapon.SelectionOrder 1900;
	Weapon.AmmoUse1 0;
	Weapon.AmmoGive1 0;
	Weapon.AmmoUse2 0;
	Weapon.AmmoGive2 0;
	Weapon.AmmoType2 "IFVMissileAmmo";
	Weapon.AmmoType1 "IFVGunAmmo";
	Obituary "$OB_MPPISTOL";
	+WEAPON.AMMO_OPTIONAL;
	+WEAPON.ALT_AMMO_OPTIONAL;
	//+WEAPON.NOAUTOFIRE;
	Inventory.Pickupmessage "$PICKUP_PISTOL_DROPPED";
	Tag "$TAG_PISTOL";
	}
	
	
	int HellFireRecharge;
	int IFVProjectileRecharge;
		
    override void DoEffect() {
    super.DoEffect();
    if (!owner || !owner.player) //double-check that owner exists and its a player
      return; //do nothing otherwise
    if (level.isFrozen())
      return; //do nothing if level is frozen
    if (IFVProjectileRecharge > 0) 
      IFVProjectileRecharge--; // if IFVProjectileRecharge is above 0, reduce it by 1 every tick
	if (HellFireRecharge > 0)
	  HellFireRecharge--;
	}
	
	
	action void A_FireIFV()
	{ 
			ACS_NamedExecuteAlways("Show IFV_Hud", 0, 0, 0, 0);//SHOWHUD			
			A_StartSound("IFV/IFVFIRE", 0, 0, 1);	
			A_FireCustomMissile("YellowFlareSpawn",0,0,0,0);
			A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 10);
			A_SpawnItemEx("PlayerMuzzle2", 0, 0, 10);
			A_FireCustomMissile("IFVProjectile", 0, TRUE, 0, 10);
			A_TakeInventory("IFVGunAmmo", 1);
	}
	
	action void A_FireHellFire()
	{
		 A_StartSound("IFV/IFVMISL", 6, 0, 1);
		 A_TakeInventory("IFVMissileAmmo", 1);
		 A_FireCustomMissile("Hellfire", 0, 1, 0, 0);
		 A_FireCustomMissile("TankFireEffect", 0, 1, 0, -40);
	}
	States
	{
		Ready:
		TNT1 A 1 {
				ACS_NamedExecuteAlways("Show IFV_Hud", 0, 0, 0, 0);
			if (invoker.owner.GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK && invoker.IFVProjectileRecharge == 0 && invoker.owner.CountInv("IFVGunAmmo") >= 1)
				{A_FireIFV(); invoker.IFVProjectileRecharge = 8;}
			if (invoker.owner.GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK && invoker.HellFireRecharge == 0 && invoker.owner.CountInv("IFVMissileAmmo") >= 1)
				{A_FireHellFire(); invoker.HellFireRecharge = 100;}
				}
		TNT1 A 0{
				 A_GiveInventory("HeavyTankReady", 1);
	             ACS_NamedExecuteAlways("Show IFV_Hud", 0, 0, 0, 0);//SHOWHUD
				 A_JumpIf (pitch > 220, "TooHighCheck2");
				 A_JumpIf (pitch > 16, "TooLowCheck2");
				}
		Loop;
		
	NotReady:
		TNT1 A 1 A_GiveInventory("IFVReady", 1);
		TNT1 A 0 ACS_NamedExecuteAlways("Show IFV_Hud", 0, 0, 0, 0);//SHOWHUD
		Goto Ready;
		
	Deselect:
		TNT1 A 1 A_Lower;
		TNT1 A 0 A_ZoomFactor(1.0);
		TNT1 A 0 SetPlayerProperty(0,0,4);
		Loop;
	Select:
		TNHD AA 0 A_Raise;
		TNT1 A 0 SetPlayerProperty(0,1,4);
		TNT1 A 1 A_TakeInventory("PressedUse", 1);
		TNT1 A 1 A_TakeInventory("PressedJump", 2);
		TNHD A 1 A_Raise;
		TNT1 A 1 A_TakeInventory("PressedJump", 2);
		TNT1 A 0;
		Goto Ready;
	Fire:    
		TNT1 A 0;
		Goto Ready;

	AltFire:
		TNT1 A 0;
		Goto Ready;
		
		
	
	TooHigh2:
		TNT1 A 0 A_SetPitch(326);
		Goto Ready;
		
	
	TooLowCheck2:
		//NULL A 0 A_JumpIf (pitch > 180, "TooHighCheck1");
		TNT1 A 0 A_SetPitch(16);
		Goto Ready;
		
		
	TooHighCheck2:
		TNT1 A 0;
		NULL A 0 A_JumpIf (pitch < 325, "TooHigh2");
		Goto Ready;
	
	
	
	TooHigh:
		TNT1 A 0 A_SetPitch(326);
		Goto Flash;
		
	
	TooLowCheck1:
		//NULL A 0 A_JumpIf (pitch > 180, "TooHighCheck1");
		TNT1 A 0 A_SetPitch(16);
		Goto Flash;
		
	TooHighCheck1:
		TNT1 A 0;
		NULL A 0 A_JumpIf (pitch < 325, "TooHigh");
		Goto Flash;
	
	
	Flash:
		TNT1 A 1;
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "LightEnd");
		NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck1");
		NULL A 0 A_JumpIf (pitch > 16, "TooLowCheck1");
		TNT1 A 1;
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "LightEnd");
		NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck1");
		NULL A 0 A_JumpIf (pitch > 16, "TooLowCheck1");
		TNT1 A 1;
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "LightEnd");
		NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck1");
		NULL A 0 A_JumpIf (pitch > 16, "TooLowCheck1");
		Stop;
	
	LightEnd:
		TNT1 A 2;
		Stop;
		
	Spawn:
		LAUN A -1;
		Stop;
		
	}
}

Class Hellfire : fastprojectile
{
	default{
	Radius 4;
	Height 4;
	Speed 260;
	Damagefunction (random (530, 850));
	Projectile;
	+RANDOMIZE;
	+DEHEXPLOSION;
	+ROCKETTRAIL;
	+MISSILE;
	damagetype "Explosive";
//	Obituary "$OB_MPROCKET";
	}
	States
	{
	Spawn:
		HELF A 1 Bright;
		TNT1 A 0 A_SpawnItem("RocketFlare",-50,0);
		TNT1 A 0 A_SpawnItem ("OldschoolRocketSmokeTrail2");
		TNT1 A 0 A_CustomMissile ("OldschoolRocketSmokeTrail2", 2, 0, random (160, 210), 2, random (-30, 30));
		Loop;
	Death:
		MISL B 0 Bright A_Explode;
		TNT1 A 0 A_SpawnItem("IFVMissileExplosionImpact");
		TNT1 A 0 A_StartSound("FAREXPL", 7, 0, 1, 0);
		TNT1 A 0 A_SpawnItemEx ("ExplosionSplashSpawner", 0, 0, -20);
		TNT1 A 0 A_SpawnItemEx ("BarrelKaboom",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
        TNT1 A 0 A_SpawnItemEx ("DetectFloorCrater",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
	    TNT1 A 0 A_SpawnItemEx ("DetectCeilCrater",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
	    TNT1 A 0 A_SpawnItemEx ("UnderwaterExplosion",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
        TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);

        TNT1 AAAAAAAAA 0 A_CustomMissile ("ExplosionParticleHeavy", 0, 0, random (0, 360), 2, random (0, 180));
        TNT1 AAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("ExplosionParticleHeavy", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAAAAAAAA 0 A_CustomMissile ("ExplosionParticleVeryFast", 0, 0, random (0, 360), 2, random (0, 360));
        TNT1 AAAAA 0 A_CustomMissile ("MediumExplosionFlames", 0, 0, random (0, 360), 2, random (0, 360));
        //EXPL AAAAA 0 A_CustomMissile ("ExplosionSmoke22", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 A 6;
//		TNT1 A 0 A_PlaySound("FAREXPL", 1);
		TNT1 A 12;
		Stop;
	}
}

Class IFVMissileExplosionImpact : actor
{
	default{
	damagetype "ExplosiveImpact";
	+MISSILE;
	+NOCLIP;
	}
	States
	{
	Spawn:
		TNT1 A 1;
		TNT1 A 0 A_Explode(180, 380);
		Stop;
	}
}

Class IFVMainGun : Inventory
{
	default{
	inventory.maxamount 1;
	}
}



Class IFVGunAmmo : Ammo
{
	default{
//	Game Doom;
	Inventory.PickupMessage "Picked up a heavy rounds.";
	Inventory.Amount 800;
	Inventory.MaxAmount 800;
	Ammo.BackpackAmount 0;
	Ammo.BackpackMaxAmount 800;
	Inventory.Icon "NULL";
	}
	States
	{
	Spawn:
		CLIP A -1;
		Stop;
	}
}

Class IFVMissileAmmo : Ammo
{
	default{
//	Game Doom;
	Inventory.PickupMessage "Picked up a Missiles.";
	Inventory.Amount 12;
	Inventory.MaxAmount 12;
	Ammo.BackpackAmount 0;
	Ammo.BackpackMaxAmount 12;
	Inventory.Icon "NULL";
	}
	States
	{
	Spawn:
		CLIP A -1;
		Stop;
	}
}

Class IFVProjectile: FastProjectile
{
	default
	{
	Projectile;
	+RANDOMIZE;
	+FORCEXYBILLBOARD;
	+NOEXTREMEDEATH;
	+BLOODSPLATTER ;
	+THRUGHOST;

	radius 2;
	height 2;
	Speed 310;
	Damagefunction (random(72,123));
	seesound "Brs";
	scale 0.15;
	RenderStyle "Add";
	Alpha 0.9;
	damagetype "ExplosiveImpact";
	Decal "Scorch";
	//Obituary "$OB_SPIDER";
	}


States
{
		Spawn:
				TNT1 A 1;
				
				Loop;


		Death:
		EXPL A 0 A_Explode (12, 70, 0);
		TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
        TNT1 AA 0 A_CustomMissile ("ExplosionParticleHeavy", 0, 0, random (0, 360), 2, random (0, 180));
        TNT1 AAAA 0 A_CustomMissile ("ExplosionParticleHeavy", 0, 0, random (0, 180), 2, random (0, 180));
        TNT1 AAAA 0 A_CustomMissile ("SmallExplosionFlames", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 A 0 A_SpawnItem("WhiteShockwaveSmall");
		TNT1 AAA 0 A_CustomMissile ("ExplosionParticleHeavy", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAA 0 A_CustomMissile ("ExplosionParticleVeryFast", 0, 0, random (0, 360), 2, random (0, 40));
		
	//	TNT1 A 0 A_PlaySound("FAREXPL");
		TNT1 A 0 A_StartSound("FAREXPL",0,0,1,1);



	}

}

Class IFVTreadsDamage : Actor
{
	default{
	+NOTARGET;
	Radius 1;
	Height 1;
	+NOGRAVITY;
	+NOTELEPORT;
	+NODAMAGETHRUST;
	+THRUGHOST;
	+NORADIUSDMG;
	+FORCERADIUSDMG;
	PROJECTILE;
	+DEHEXPLOSION;
	+ACTIVATEMCROSS;
	+EXPLODEONWATER;
	}
States
{
Spawn:
TNT1 A 0;
TNT1 A 0 A_Explode(4,50,0,damagetype:"Treads");
TNT1 A 0 A_SpawnItemEx("IFVTreadsDamage2", 0, 50);
TNT1 A 0 A_SpawnItemEx("IFVTreadsDamage2", 0, -50);
TNT1 A 0 A_SpawnItemEx("IFVTreadsDamage3", 0, 50, 70);
TNT1 A 0 A_SpawnItemEx("IFVTreadsDamage3", 0, -50, 70);
TNT1 A 0 A_SpawnItemEx("IFVTreadsDamage3", 0, 0, 70);
TNT1 A 1 A_Noblocking;
PLAY A 0;
Stop;
 }
}


Class IFVTreadsDamage2: IFVTreadsDamage
{
States
{
Spawn:
TNT1 A 0;
TNT1 A 0 A_Explode(4,50,0,damagetype:"Treads");
PLAY A 0;
TNT1 A 1 A_Noblocking;
Stop;
 }
}


Class IFVTreadsDamage3: IFVTreadsDamage
{
States
{
Spawn:
TNT1 A 0;
TNT1 A 0 A_Explode(2,30,damagetype:"Treads");
PLAY A 0;
TNT1 A 1 A_Noblocking;
Stop;
 }
}