

Class HeavyTankTreads_01 : Actor
{
 States{
  Spawn:
  TNT1 A 0;
  HTT1 A 1; 
  stop;
  }
}
Class HeavyTankTreads_02 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 B 1; 
  stop;
  }
}
Class HeavyTankTreads_03 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 C 1; 
  stop;
  }
}
Class HeavyTankTreads_04 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 D 1; 
  stop;
  }
}
Class HeavyTankTreads_05 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 E 1; 
  stop;
  }
}
Class HeavyTankTreads_06 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 F 1; 
  stop;
  }
}
Class HeavyTankTreads_07 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 G 1; 
  stop;
  }
}
Class HeavyTankTreads_08 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 H 1; 
  stop;
  }
}
Class HeavyTankTreads_09 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 I 1; 
  stop;
  }
}
Class HeavyTankTreads_10 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 J 1; 
  stop;
  }
}
Class HeavyTankTreads_11 : Actor
{
 States{
  Spawn:
  TNT1 A 0;
  HTT1 K 1; 
  stop;
  }
}
Class HeavyTankTreads_12 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 L 1; 
  stop;
  }
}
Class HeavyTankTreads_13 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 M 1; 
  stop;
  }
}
Class HeavyTankTreads_14 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 N 1; 
  stop;
  }
}
Class HeavyTankTreads_15 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 O 1; 
  stop;
  }
}
Class HeavyTankTreads_16 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 P 1; 
  stop;
  }
}
Class HeavyTankTreads_17 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 Q 1; 
  stop;
  }
}
Class HeavyTankTreads_18 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 R 1; 
  stop;
  }
}
Class HeavyTankTreads_19 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 S 1; 
  stop;
  }
}
Class HeavyTankTreads_20 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 T 1; 
  stop;
  }
}
Class HeavyTankTreads_21 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 U 1; 
  stop;
  }
}
Class HeavyTankTreads_22 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 V 1; 
  stop;
  }
}
Class HeavyTankTreads_23 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 W 1; 
  stop;
  }
}
Class HeavyTankTreads_24 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 X 1; 
  stop;
  }
}
Class HeavyTankTreads_25 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 Y 1; 
  stop;
  }
}
Class HeavyTankTreads_26 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT1 Z 1; 
  stop;
  }
}
Class HeavyTankTreads_27 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT2 A 1; 
  stop;
  }
}
Class HeavyTankTreads_28 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT2 B 1; 
  stop;
  }
}
Class HeavyTankTreads_29 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT2 C 1; 
  stop;
  }
}
Class HeavyTankTreads_30 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT2 D 1; 
  stop;
  }
}
Class HeavyTankTreads_31 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT2 E 1; 
  stop;
  }
}
Class HeavyTankTreads_32 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT2 F 1; 
  stop;
  }
}
Class HeavyTankTreads_33 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT2 G 1; 
  stop;
  }
}
Class HeavyTankTreads_34 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT2 H 1; 
  stop;
  }
}
Class HeavyTankTreads_35 : Actor
{
 States{
  Spawn: 
  TNT1 A 0;
  HTT2 I 1; 
  stop;
  }
}

///////////////////////////


Class HeavyTankHull : Actor
{
	Default
	{
	//+THRUACTORS;
	//+NOTIMEFREEZE;
	//+CLIENTSIDEONLY;
	+FLOORCLIP;
	+NOBLOCKMAP;
	+SOLID;
	+INTERPOLATEANGLES;
	//health 2200;
	+THRUSPECIES;
	Species "Abrams";
	Mass 99999;
	Radius 73;
	Height 48;
	//Gravity 0;
	}
States
{
Spawn:
		TNT1 A 0;
		HTNH A 1;
		
stop;
}}

Class HeavyTankTurret: HeavyTankHull
{
States
{
Spawn:
TNT1 A 0;
TNT1 A 0 A_Stop;
TNT1 A 0 ;
HTNT A 1;
Stop;
}}

/*
	override void Activate (Class activator)
	{
		SetStateLabel("Active");
	}

	override void Deactivate (Class activator)
	{
		SetStateLabel("Inactive");
	}
*/
Class HeavyTank: SwitchableDecoration
{
	int user_stationedtankbasedirection;
	default{
    Radius 68;
	Height 74;
	+SOLID;
	+USESPECIAL;
	MONSTER;
	+FRIENDLY;
	-COUNTKILL;
	+SHOOTABLE;
	+LOOKALLAROUND;
//	+THRUACTOR;
	+NOINFIGHTING;
	+NORADIUSDMG;
	-COUNTKILL;
	damagefactor "stomp", 0;
	damagefactor "Incinerate", 0.0;
//	damagefactor "normal", 0.0;
	damagefactor "Treads", 0.0;
	MaxTargetRange 120;
	PainChance "Repair", 255;
	BloodType "TankBlood", "TankBlood", "TankBlood";
	Activation THINGSPEC_Activate | THINGSPEC_ThingTargets | THINGSPEC_NoDeathSpecial;
	Mass 9999;
	Speed 0;
	health 2200;
	DamageFactor "Repair", 0.0; damagefactor "CheckRepair", 0.0;
	damagefactor "Head", 0.0;	damagefactor "FriendBullet", 0.0;    damagefactor "Taunt", 0.0;    damagefactor "KillMe", 0.0;
	damagefactor "Shotgun", 0.0;    damagefactor "Shrapnel", 0.0;    damagefactor "Blood", 0.0;    damagefactor "BlueBlood", 0.0;
	damagefactor "Explosives", 5.5; damagefactor "bullet", 0.0; damagefactor "monsterbullet", 0.0; damagefactor "shotgun", 0; damagefactor "monstershotgun", 0.0; damagefactor "monsterminigun", 0.0;
	damagefactor "GreenBlood", 0.0;    damagefactor "MinorHead", 0.0;    damagefactor "Decaptate", 0.0;	damagefactor "MonsterKnocked", 0.0;
    damagefactor "CancelTeleportFog", 0.0;	damagefactor "BHFTOnBarrel", 0.0;	damagefactor "GibRemoving", 0.0;	damagefactor "SuperPunch", 0.0;
	damagefactor "HelperMarineFatallity", 0.0;	damagefactor "Leg", 0.0;	damagefactor "SpawnMarine", 0.0;	damagefactor "TeleportRemover", 0.0;
	DamageFactor "CauseObjectsToSplash", 0.0; DamageFactor "Trample", 0.0; DamageFactor "Minigun", 0.1; damageFactor "Machinegun", 0.1;
	DamageFactor "TankWeakSpot", 3.0; damagefactor "Plasma", 2.5; damagefactor "Plasma2", 3.5;
	damagefactor "Desintegrate", 2.0;
	damagefactor "Blast", 0.0;
	damagefactor "ExplosiveImpact", 0.5;
	damagefactor "Burn", 0.0;
	damagefactor "Arm", 0.0;
	damagefactor "SSG", 0.0;
	damagefactor "Head", 0.0;
	damagefactor "Cutless", 0.0;
	damagefactor "TankShell", 0.3;
	damagefactor "Explosive", 0.4;
	damagefactor "HeavyTankMachineGun", 0.0;
	}
		HeavyTankHull hva;
		
    States
    {
    Spawn:
		HTNH A 1;
		TNT1 A 1 
		{
			hva = HeavyTankHull(Spawn("HeavyTankHull",pos));
		}
	    TNT1 A 1;
		TNT1 A 0 Thing_ChangeTID(0, 261);
		TNT1 A 0 ACS_ExecuteAlways(137, 0, 0, 0, 0);//Check vehicle initial angle.
		TNT1 A 1 A_ChangeFlag("FRIENDLY", 0);
		TNT1 A 0 A_SpawnItem("HeavyTankTurret");
		TNT1 A 0 Thing_ChangeTID(0, 0);
		HTNH A 0 A_ChangeFlag("THRUACTOR", 0);
		TNT1 A 0 A_ChangeFlag("FRIENDLY", 1);
				

		Goto StandingHere;
		
	  StandingHere:
		TNT1 A 0;
		TNT1 A 0 ACS_NamedExecuteAlways("Leaving HeavyTank", 0, 0, 0, 0);//SpawnVehicleBase
		TNT1 A 1;
		TNT1 A 0 A_SpawnItem("HeavyTankTurret");
		TNT1 A 0 A_SpawnItem("HeavyTankHull");
		TNT1 A 0 A_SpawnItem("HeavyTankTreads_01");
		Loop;
		
	Active:
		TNT1 A 0 ;
		BRAD C 0 A_ChangeFlag("FRIENDLY", 0);
		//TNT1 A 0 A_Look
		TNT1 A 0 Thing_ChangeTID(0, 261);
		TNT1 A 0 ACS_ExecuteAlways(130, 0, 0, 0, 0);//Check Vehicle Health	
		//TNT1 A 0 A_Chase("","",CHF_DONTMOVE )
		TNT1 A 0 A_GiveToTarget("CheckingMorphingPlayerHealth", 1);
		TNT1 A 0 A_SpawnItem("HeavyTankTurret");
		NULL A 3;
		TNT1 A 0 A_GiveToTarget("HeavyTankMorpher", 1);
		TNT1 A 0 A_GiveToTarget("HeavyTankAmmo", 40);
		TNT1 A 0 A_GiveToTarget("HeavyTankMachinegunAmmo", 3600);
		TNT1 A 0 Thing_ChangeTID(0, 261);
		TNT1 A 0 A_NoBlocking;
		NULL A 1;
		TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
		NULL A 10;
		TNT1 A 0 {
			Thing_ChangeTID(0, 0);
			if (hva)
				hva.destroy();
				}
		NULL A 1;
		Stop;
	Death:	
	TNT1 A 1;
	TNT1 A 0 A_SpawnItem("BigExplosion1112");
	TNT1 A 0 A_PlaySound("weapons/explode");
	TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
	TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
	TNT1 A 0 A_Scream;
	NULL AAAAAA 0 A_CustomMissile ("MetalShard1", 96, 0, random (0, 360), 2, random (0, 180));
	NULL AAAAAA 0 A_CustomMissile ("MetalShard2", 96, 0, random (0, 360), 2, random (0, 180));
	NULL AAAAAAAAA 0 A_CustomMissile ("GlassShard", 96, 0, random (0, 360), 2, random (0, 360));
//	TNT1 A 0 A_SpawnItem("DestroyedArmouredVehicle");
	ELEC A 0 A_Explode(100, 250);
	TNT1 A 15;
	TNT1 A 0;
	Stop;
	
		Pain.Repair:
		 TNT1 A 0;
		 TNT1 A 0 A_ChangeFLag("NOPAIN", 1);
		 TNT1 A 0 HealThing(5);
		 HTNT A 1;
		 TNT1 A 0 HealThing(5);
		 TNT1 A 0 A_ChangeFLag("NOPAIN", 0);
		 Goto StandingHere;
	}
}



Class HeavyTankUsed: HeavyTank
{
	Default{
    Radius 68;
	Height 74;
	}
    States
    {
	Spawn:

		TNT1 A 0;
	    TNT1 A 1;
		TNT1 A 0 ACS_NamedExecuteAlways("Leaving HeavyTank", 0, 0, 0, 0);//SpawnVehicleBase
		TNT1 A 0 Thing_ChangeTID(0, 261);
		TNT1 A 1 A_ChangeFlag("FRIENDLY", 0);
		TNT1 A 5 ;
		TNT1 A 0 Thing_ChangeTID(0, 0);
		TNT1 A 0 A_ChangeFlag("THRUACTOR", 0);
		TNT1 A 0 A_ChangeFlag("FRIENDLY", 1);
		TNT1 A 0 ACS_Execute(129);
		Goto StandingHere;
	
	IsOnline:
		TNT1 A 0;
		TNT1 A 1;
		TNT1 A 0 A_TAkeInventory("TankBaseDirection", 500);
		Goto StandingHere;
		
	
	
	Active:
		TNT1 A 0 ;
		TTR1 A 0 A_ChangeFlag("FRIENDLY", 0);
		TNT1 A 0 Thing_ChangeTID(0, 261);
		TNT1 A 0 ACS_ExecuteAlways(130, 0, 0, 0, 0);//Check Vehicle Health
		//TNT1 A 0 A_Chase("","",CHF_DONTMOVE )
		TNT1 A 0 A_GiveToTarget("CheckingMorphingPlayerHealth", 1);
		NULL A 3;
		TNT1 A 0 A_GiveToTarget("HeavyTankMorpher", 1);
		TNT1 A 0 Thing_ChangeTID(0, 261);
		TNT1 A 0 A_NoBlocking;
		NULL A 1;
		TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
		NULL A 10;
		TNT1 A 0 Thing_ChangeTID(0, 0);
		Stop;
	}
}

	


Class HeavyTankSwitch : PowerMorph 
{ 
	default
	{
	PowerMorph.PlayerClass "PlayerHeavyTank";
	}
}



Class HeavyTankMorpher : CustomInventory 
{
  States
  {
  PickUp:
  TNT1 A 1;
  TNT1 A 0 ACS_ExecuteAlways(134, 0, 0, 0, 0);//Get into Tank
  TNT1 A 0 A_GiveInventory("HeavyTankMorphActivation");
  TNT1 A 0 A_SpawnItem("CancelTeleportFog");
  TNT1 A 1;
  Stop;
  }
 }
 


Class HeavyTankMorphActivation : PowerupGiver
{
  default{
  Powerup.Type "HeavyTankSwitch";
  Powerup.Duration 252000;
  +INVENTORY.AUTOACTIVATE;
  +INVENTORY.ALWAYSPICKUP;
  Inventory.MaxAmount 1;
  Health 100;
  GibHealth 1;
  Mass 9999;
  Height 96;
  Radius 32;
  }
  States
  {
  Spawn:
  TNT1 A 100;
  Stop;
  
  PickUp:
  TNT1 A 1;
  TNT1 A 1;
  Stop;
  }
 }
 
 


Class PlayerHeavyTank : PlayerPawn
{
    int heavytankbasedirection;
	int HeavyTank_Animation;
	int HeavyTank_Left_Tread_Display;
	int HeavyTank_Right_Tread_Display;
	Default{
	
	Speed 0;
	Radius 64;
	Height 34;
	Mass 9999;
	PainChance 0;
	health 2200;
	-PICKUP;
	Speed 0.01;
	player.viewheight	90;
    player.attackzoffset 90;
	MaxStepHeight 32;
	Player.MorphWeapon "HeavyTankGun";
    Player.JumpZ 0;
	damagefactor "slime", 0.0;
	BloodType "TankBlood", "TankBlood", "TankBlood";
	damagefactor "stomp", 0;
	damagefactor "Incinerate", 0.0;
//	damagefactor "normal", 0.0;
	damagefactor "Treads", 0.0;
	+NOSKIN;
	+NORADIUSDMG;
	+FORCERADIUSDMG;
	+FIXMAPTHINGPOS;
	+DONTRIP;
	+NOWALLBOUNCESND;
	-CANUSEWALLS;
	+THRUSPECIES;
	Species "Abrams";
	+INTERPOLATEANGLES;
	-PICKUP;
	DamageFactor "Repair", 0.0; damagefactor "CheckRepair", 0.0;
	damagefactor "Head", 0.0;	damagefactor "FriendBullet", 0.0;    damagefactor "Taunt", 0.0;    damagefactor "KillMe", 0.0;
	damagefactor "Shotgun", 0.0;    damagefactor "Shrapnel", 0.0;    damagefactor "Blood", 0.0;    damagefactor "BlueBlood", 0.0;
	damagefactor "Explosives", 5.5; damagefactor "bullet", 0.0; damagefactor "monsterbullet", 0.0; damagefactor "shotgun", 0; damagefactor "monstershotgun", 0.0; damagefactor "monsterminigun", 0.0;
	damagefactor "GreenBlood", 0.0;    damagefactor "MinorHead", 0.0;    damagefactor "Decaptate", 0.0;	damagefactor "MonsterKnocked", 0.0;
    damagefactor "CancelTeleportFog", 0.0;	damagefactor "BHFTOnBarrel", 0.0;	damagefactor "GibRemoving", 0.0;	damagefactor "SuperPunch", 0.0;
	damagefactor "HelperMarineFatallity", 0.0;	damagefactor "Leg", 0.0;	damagefactor "SpawnMarine", 0.0;	damagefactor "TeleportRemover", 0.0;
	DamageFactor "CauseObjectsToSplash", 0.0; DamageFactor "Trample", 0.0; DamageFactor "Minigun", 0.1; damageFactor "Machinegun", 0.1;
	DamageFactor "TankWeakSpot", 3.0; damagefactor "Plasma", 2.5; damagefactor "Plasma2", 3.5;
	damagefactor "Desintegrate", 2.0;
	damagefactor "Blast", 0.0;
	damagefactor "ExplosiveImpact", 0.5;
	damagefactor "Burn", 0.0;
	damagefactor "Arm", 0.0;
	damagefactor "SSG", 0.0;
	damagefactor "Head", 0.0;
	damagefactor "Cutless", 0.0;
//	damagefactor "None", 0.0;
	damagefactor "TankShell", 0.3;
	damagefactor "Explosive", 0.4;
	damagefactor "HeavyTankMachineGun", 0.0;
	}
	
	
	HeavyTankHull hva;
		private double curangle;
		
		override void BeginPlay() 
		{
		super.BeginPlay();
		SpawnHitBoxes();
		}
	
		private void SpawnHitBoxes() 
		{
		SpawnHitBox("Vehicle_Hitbox", (88, 0, 0), 85, 108);
		SpawnHitBox("Vehicle_Hitbox", (-88, 0, 0), 85,128);
		}
	
			override void Tick()
	{
		curangle = heavytankbasedirection;
		super.Tick();
		if (!hva) {
			hva = HeavyTankHull(Spawn("HeavyTankHull", pos)); 
			hva.master = self;
		}
		else {
			hva.A_SetAngle(heavytankbasedirection,SPF_INTERPOLATE);	
			hva.SetOrigin(pos,false);
		}
	}
	States
	{
	
	
		
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ThrustTHingZ(0, 0, -1, 1);
		HTNH A 1 ;
	Spawn2:
	    TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		TNT1 A 0 A_TakeInventory("Accelerate", 1);
		TNT1 A 0 A_TakeInventory("BackPedal", 1);
		TNT1 A 0 ACS_ExecuteAlways(888, 0, 0, 0, 0);
//		TNT1 A 0 ACS_ExecuteAlways(995, 0, 0, 0, 0);
		HTNH A 1{
				 {HVA = SpawnHeavyTankHull("HeavyTankHull");}
				 A_SpawnItemEx ("HeavyTankTurret" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
				}
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 A_TakeInventory("HeavyTankMainGun", 1);
		TNT1 A 0 A_TakeInventory("IsOverWater", 9999);
		TNT1 A 0 A_TakeInventory("IsOverSlime", 9999);
		TNT1 A 0 A_TakeInventory("IsOverSludge", 9999);
		TNT1 A 0 A_TakeInventory("IsOverLava", 9999);
		TNT1 A 0 A_TakeInventory("IsOverBlood", 9999);
		TNT1 A 0 A_TakeInventory("IsOverGrass", 9999);
		TNT1 A 0 A_TakeInventory("IsOverSand", 9999);
		TNT1 A 0 A_TakeInventory("IsOverGravel", 9999);
		TNT1 A 0 A_TakeInventory("IsOverDirt", 9999);
		TNT1 A 0 A_TakeInventory("IsOverMetal", 9999);
		TNT1 A 0 A_TakeInventory("IsOverMetal2", 9999);
		TNT1 A 0 A_TakeInventory("IsOverRock", 9999);
		TNT1 A 0 A_TakeInventory("IsOverSnow", 9999);
		TNT1 A 0 A_TakeInventory("IsOverWood", 9999);
		TNT1 A 0 A_TakeInventory("IsOverTile", 9999);
		TNT1 A 0 A_TakeInventory("IsOverTile2", 9999);
		TNT1 A 0 A_TakeInventory("IsOverSlimy", 9999);		
	Goto Stay;

		

	ExitVehicle:
	TNT1 A 1;
	
	TNT1 A 0 A_TakeInventory("PressedUse", 1);
	
	TNT1 A 0 A_SpawnItemEx ("TransferPlayerOutOfVehicle", 0, 0, 150);
	
	HTNH A 1;
	TNT1 A 0 {HVA = SpawnHeavyTankHull("HeavyTankHull");}
	HTNH A 1;
	TNT1 A 0 {HVA = SpawnHeavyTankHull("HeavyTankHull");}
	HTNH A 1;
	TNT1 A 0 {HVA = SpawnHeavyTankHull("HeavyTankHull");}
	
	TNT1 A 0 A_JumpIfInventory("CanLeaveVehicle", 1, "CanExit");
	TNT1 A 0 A_Print("Can't leave from this direction", 1);
	Goto Stay;
	
	CanExit:
	TNT1 A 0;
	TNT1 A 2;
	TNT1 A 0 A_TakeInventory("PressedUse", 1);
	TNT1 A 0 A_TakeInventory("CanLeaveVehicle", 1);
	TNT1 A 0 ACS_Execute(135);
	TNT1 A 0 ACS_Execute(871);
	TNT1 A 0 A_SpawnItemEx ("HeavyTankUsed", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	Goto FinishExit;

	FinishExit:
	TNT1 A 0 A_TakeInventory("PressedUse", 1);
	TNT1 AAA 10 A_TakeInventory("PressedUse", 1);
	TNT1 A 0 A_TakeInventory("PressedUse", 1);
	Goto Stay;
	
		
		
	TurnLeft:
		TNT1 A 0;
		HTNH A 1 
				{	
					A_JumpIf(heavytankbasedirection > 359, "TurnLeft2");
					A_SpawnItemEx ("HeavyTankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
					HVA = SpawnHeavyTankHull("HeavyTankHull");
					HeavyTank_Left_Tread_Display = HeavyTank_Animation;
					 Switch(HeavyTank_Left_Tread_Display)
				   {
					default:
						break;
				   case 0:  HeavyTank_Left_Tread_Display = 1;
				   case 1:  A_SpawnItemEx ("HeavyTankTreads_01" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 2:  A_SpawnItemEx ("HeavyTankTreads_02" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 3:  A_SpawnItemEx ("HeavyTankTreads_03" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 4:  A_SpawnItemEx ("HeavyTankTreads_04" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 5:  A_SpawnItemEx ("HeavyTankTreads_05" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 6:  A_SpawnItemEx ("HeavyTankTreads_06" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 7:  A_SpawnItemEx ("HeavyTankTreads_07" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 8:  A_SpawnItemEx ("HeavyTankTreads_08" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 9:  A_SpawnItemEx ("HeavyTankTreads_09" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 10: A_SpawnItemEx ("HeavyTankTreads_10" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 11: A_SpawnItemEx ("HeavyTankTreads_11" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 12: A_SpawnItemEx ("HeavyTankTreads_12" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 13: A_SpawnItemEx ("HeavyTankTreads_13" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 14: A_SpawnItemEx ("HeavyTankTreads_14" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 15: A_SpawnItemEx ("HeavyTankTreads_15" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 16: A_SpawnItemEx ("HeavyTankTreads_16" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 17: A_SpawnItemEx ("HeavyTankTreads_17" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 18: A_SpawnItemEx ("HeavyTankTreads_18" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 19: A_SpawnItemEx ("HeavyTankTreads_19" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 20: A_SpawnItemEx ("HeavyTankTreads_20" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 21: A_SpawnItemEx ("HeavyTankTreads_21" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 22: A_SpawnItemEx ("HeavyTankTreads_22" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 23: A_SpawnItemEx ("HeavyTankTreads_23" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 24: A_SpawnItemEx ("HeavyTankTreads_24" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 25: A_SpawnItemEx ("HeavyTankTreads_25" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 26: A_SpawnItemEx ("HeavyTankTreads_26" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 27: A_SpawnItemEx ("HeavyTankTreads_27" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 28: A_SpawnItemEx ("HeavyTankTreads_28" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 29: A_SpawnItemEx ("HeavyTankTreads_29" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 30: A_SpawnItemEx ("HeavyTankTreads_30" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 31: A_SpawnItemEx ("HeavyTankTreads_31" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 32: A_SpawnItemEx ("HeavyTankTreads_32" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 33: A_SpawnItemEx ("HeavyTankTreads_33" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 34: A_SpawnItemEx ("HeavyTankTreads_34" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 35: A_SpawnItemEx ("HeavyTankTreads_35" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
					}
					
				}
		TNT1 A 0 { heavytankbasedirection += 4; }
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		Goto CheckIfStillMoves;
	
	TurnLeft2:
		TNT1 A 0 A_SetUserVar("heavytankbasedirection", 0);
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		Goto CheckIfStillMoves;
		
	TurnRight:
		TNT1 A 0;
		HTNH A 1 {
					A_JumpIf(heavytankbasedirection == 0, "TurnRIght2");
					A_SpawnItemEx ("HeavyTankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
					HVA = SpawnHeavyTankHull("HeavyTankHull");
					HeavyTank_Right_Tread_Display = HeavyTank_Animation;
					 Switch(HeavyTank_Right_Tread_Display)
				   {
					default:
						break;
				   case 0:  HeavyTank_Right_Tread_Display = 1;
				   case 1:  A_SpawnItemEx ("HeavyTankTreads_01" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 2:  A_SpawnItemEx ("HeavyTankTreads_02" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 3:  A_SpawnItemEx ("HeavyTankTreads_03" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 4:  A_SpawnItemEx ("HeavyTankTreads_04" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 5:  A_SpawnItemEx ("HeavyTankTreads_05" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 6:  A_SpawnItemEx ("HeavyTankTreads_06" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 7:  A_SpawnItemEx ("HeavyTankTreads_07" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 8:  A_SpawnItemEx ("HeavyTankTreads_08" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 9:  A_SpawnItemEx ("HeavyTankTreads_09" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 10: A_SpawnItemEx ("HeavyTankTreads_10" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 11: A_SpawnItemEx ("HeavyTankTreads_11" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 12: A_SpawnItemEx ("HeavyTankTreads_12" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 13: A_SpawnItemEx ("HeavyTankTreads_13" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 14: A_SpawnItemEx ("HeavyTankTreads_14" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 15: A_SpawnItemEx ("HeavyTankTreads_15" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 16: A_SpawnItemEx ("HeavyTankTreads_16" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 17: A_SpawnItemEx ("HeavyTankTreads_17" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 18: A_SpawnItemEx ("HeavyTankTreads_18" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 19: A_SpawnItemEx ("HeavyTankTreads_19" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 20: A_SpawnItemEx ("HeavyTankTreads_20" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 21: A_SpawnItemEx ("HeavyTankTreads_21" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 22: A_SpawnItemEx ("HeavyTankTreads_22" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 23: A_SpawnItemEx ("HeavyTankTreads_23" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 24: A_SpawnItemEx ("HeavyTankTreads_24" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 25: A_SpawnItemEx ("HeavyTankTreads_25" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 26: A_SpawnItemEx ("HeavyTankTreads_26" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 27: A_SpawnItemEx ("HeavyTankTreads_27" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 28: A_SpawnItemEx ("HeavyTankTreads_28" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 29: A_SpawnItemEx ("HeavyTankTreads_29" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 30: A_SpawnItemEx ("HeavyTankTreads_30" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 31: A_SpawnItemEx ("HeavyTankTreads_31" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 32: A_SpawnItemEx ("HeavyTankTreads_32" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 33: A_SpawnItemEx ("HeavyTankTreads_33" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 34: A_SpawnItemEx ("HeavyTankTreads_34" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
				   case 35: A_SpawnItemEx ("HeavyTankTreads_35" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); break;
					}
					
				}
		
		TNT1 A 0 { heavytankbasedirection -= 4; }
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		Goto CheckIfStillMoves;
	
	TurnRight2:
		TNT1 A 0 A_SetUserVar("heavytankbasedirection", 360);
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		Goto CheckIfStillMoves	;
	
	
	CheckIfStillMoves:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "ExitVehicle");
		TNT1 A 0 A_JumpIfInventory("Accelerate", 1, "Accelerate");
		TNT1 A 0 A_JumpIfInventory("BackPedal", 1, "BackPedal");
		TNT1 A 0 A_JumpIfInventory("TurnLeft", 1, "TurnLeft");
		TNT1 A 0 A_JumpIfInventory("TurnRight", 1, "TurnRight");
		TNT1 A 0 A_StopSound(5);

		TNT1 A 0 A_PlaySound("HeavyTank/HVYMOV2", 5, 1, 0, 0);
		
	Stay:
		
		TNT1 A 0 {HVA = SpawnHeavyTankHull("HeavyTankHull");}
		TNT1 A 0 A_SpawnItemEx ("HeavyTankTreads_01" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "ExitVehicle");
		TNT1 A 0 A_JumpIfInventory("BackPedal", 1, "BackPedal");
		TNT1 A 0 A_JumpIfInventory("Accelerate", 1, "Accelerate");
		HTNH A 1 A_SpawnItemEx ("HeavyTankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_JumpIF(velz < 0, "Falling");
		Goto Stay;
		
	
	Pain.TracksDamaged:
	    TNT1 A 0;
		TNT1 A 0 ;
		
		TNT1 A 0 A_Jump(32, "DestroyTracks");
		TNT1 A 0 {HVA = SpawnHeavyTankHull("HeavyTankHull");}
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "ExitVehicle");
		TNT1 A 0 A_JumpIfInventory("BackPedal", 1, "BackPedal");
		TNT1 A 0 A_JumpIfInventory("Accelerate", 1, "Accelerate");
		HTNH A 1 A_SpawnItemEx ("HeavyTankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		Goto Stay;
		
		
	
	Accelerate:
		
		TNT1 A 0 A_PlaySound("HeavyTank/HVYMOV", 5, 1, 1);
		TNT1 A 0 A_SpawnItemEx ("HeavyTankTreadsDamage" , 100, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY);
			
		TNT1 A 0 A_SpawnItemEx ("HeavyTankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 {HVA = SpawnHeavyTankHull("HeavyTankHull");}
		TNT1 A 1 {	
//					If(HeavyTank_Animation == 36)
//					HeavyTank_Animation == 1;
					 Switch(HeavyTank_Animation)
				   {
					default:
						break;
				   case 0: HeavyTank_Animation = 1;
				   case 1:  A_SpawnItemEx ("HeavyTankTreads_01" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 2:  A_SpawnItemEx ("HeavyTankTreads_02" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 3:  A_SpawnItemEx ("HeavyTankTreads_03" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 4:  A_SpawnItemEx ("HeavyTankTreads_04" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 5:  A_SpawnItemEx ("HeavyTankTreads_05" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 6:  A_SpawnItemEx ("HeavyTankTreads_06" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 7:  A_SpawnItemEx ("HeavyTankTreads_07" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 8:  A_SpawnItemEx ("HeavyTankTreads_08" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 9:  A_SpawnItemEx ("HeavyTankTreads_09" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 10: A_SpawnItemEx ("HeavyTankTreads_10" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 11: A_SpawnItemEx ("HeavyTankTreads_11" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 12: A_SpawnItemEx ("HeavyTankTreads_12" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 13: A_SpawnItemEx ("HeavyTankTreads_13" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 14: A_SpawnItemEx ("HeavyTankTreads_14" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 15: A_SpawnItemEx ("HeavyTankTreads_15" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 16: A_SpawnItemEx ("HeavyTankTreads_16" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 17: A_SpawnItemEx ("HeavyTankTreads_17" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 18: A_SpawnItemEx ("HeavyTankTreads_18" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 19: A_SpawnItemEx ("HeavyTankTreads_19" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 20: A_SpawnItemEx ("HeavyTankTreads_20" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 21: A_SpawnItemEx ("HeavyTankTreads_21" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 22: A_SpawnItemEx ("HeavyTankTreads_22" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 23: A_SpawnItemEx ("HeavyTankTreads_23" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 24: A_SpawnItemEx ("HeavyTankTreads_24" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 25: A_SpawnItemEx ("HeavyTankTreads_25" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 26: A_SpawnItemEx ("HeavyTankTreads_26" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 27: A_SpawnItemEx ("HeavyTankTreads_27" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 28: A_SpawnItemEx ("HeavyTankTreads_28" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 29: A_SpawnItemEx ("HeavyTankTreads_29" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 30: A_SpawnItemEx ("HeavyTankTreads_30" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 31: A_SpawnItemEx ("HeavyTankTreads_31" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 32: A_SpawnItemEx ("HeavyTankTreads_32" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 33: A_SpawnItemEx ("HeavyTankTreads_33" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 34: A_SpawnItemEx ("HeavyTankTreads_34" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
				   case 35: A_SpawnItemEx ("HeavyTankTreads_35" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation += 1; break;
					}
					if (HeavyTank_Animation > 35) HeavyTank_Animation = 1;
					
				}
		
		TNT1 A 0 A_SpawnItemEx ("HeavyTankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);												//was 1
		TNT1 A 0 ThrustThing(heavytankbasedirection*256/360, 1, 1);
		TNT1 A 0 {HVA = SpawnHeavyTankHull("HeavyTankHull");}
		
		
		TNT1 A 0 A_JumpIfInventory("TurnLeft", 1, "TurnLeft");
		TNT1 A 0 A_JumpIfInventory("TurnRight", 1, "TurnRight");
		
		TNT1 A 0 A_SpawnItemEx ("HeavyTankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);												//was 1
//		TNT1 A 0 ThrustThing(heavytankbasedirection*256/360, 1, 1);
		TNT1 A 0 {HVA = SpawnHeavyTankHull("HeavyTankHull");}
		TNT1 A 0 A_JumpIF(velz < 0, "Falling");
		Goto CheckIfStillMoves;
		
		
	Backpedal:
		
		
		TNT1 A 0 A_PlaySound("HeavyTank/HVYMOV", 5, 1, 1);
		
		TNT1 A 0 A_SpawnItemEx ("HeavyTankTreadsDamage" , -100, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY);
		
		HTNH A 0 A_SpawnItemEx ("HeavyTankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 {HVA = SpawnHeavyTankHull("HeavyTankHull");}
		
		HTNH A 1 {	
					If(HeavyTank_Animation == 36)
					HeavyTank_Animation == 1;
					 Switch(HeavyTank_Animation)
				   {
					default:
						break;
				   case 0: HeavyTank_Animation = 35;
				   case 1:  A_SpawnItemEx ("HeavyTankTreads_01" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 2:  A_SpawnItemEx ("HeavyTankTreads_02" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 3:  A_SpawnItemEx ("HeavyTankTreads_03" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 4:  A_SpawnItemEx ("HeavyTankTreads_04" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 5:  A_SpawnItemEx ("HeavyTankTreads_05" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 6:  A_SpawnItemEx ("HeavyTankTreads_06" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 7:  A_SpawnItemEx ("HeavyTankTreads_07" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 8:  A_SpawnItemEx ("HeavyTankTreads_08" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 9:  A_SpawnItemEx ("HeavyTankTreads_09" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 10: A_SpawnItemEx ("HeavyTankTreads_10" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 11: A_SpawnItemEx ("HeavyTankTreads_11" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 12: A_SpawnItemEx ("HeavyTankTreads_12" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 13: A_SpawnItemEx ("HeavyTankTreads_13" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 14: A_SpawnItemEx ("HeavyTankTreads_14" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 15: A_SpawnItemEx ("HeavyTankTreads_15" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 16: A_SpawnItemEx ("HeavyTankTreads_16" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 17: A_SpawnItemEx ("HeavyTankTreads_17" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 18: A_SpawnItemEx ("HeavyTankTreads_18" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 19: A_SpawnItemEx ("HeavyTankTreads_19" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 20: A_SpawnItemEx ("HeavyTankTreads_20" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 21: A_SpawnItemEx ("HeavyTankTreads_21" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 22: A_SpawnItemEx ("HeavyTankTreads_22" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 23: A_SpawnItemEx ("HeavyTankTreads_23" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 24: A_SpawnItemEx ("HeavyTankTreads_24" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 25: A_SpawnItemEx ("HeavyTankTreads_25" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 26: A_SpawnItemEx ("HeavyTankTreads_26" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 27: A_SpawnItemEx ("HeavyTankTreads_27" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 28: A_SpawnItemEx ("HeavyTankTreads_28" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 29: A_SpawnItemEx ("HeavyTankTreads_29" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 30: A_SpawnItemEx ("HeavyTankTreads_30" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 31: A_SpawnItemEx ("HeavyTankTreads_31" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 32: A_SpawnItemEx ("HeavyTankTreads_32" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 33: A_SpawnItemEx ("HeavyTankTreads_33" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 34: A_SpawnItemEx ("HeavyTankTreads_34" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
				   case 35: A_SpawnItemEx ("HeavyTankTreads_35" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE); HeavyTank_Animation -= 1; break;
					}

					
				}
//		TNT1 A 0 ;//ThrustThing(heavytankbasedirection*256/360+128, 1, 1);
		TNT1 A 0 {HVA = SpawnHeavyTankHull("HeavyTankHull");}
		TNT1 A 0 ThrustThing(heavytankbasedirection*256/360+128, 1, 1);
		
		TNT1 A 0 A_JumpIfInventory("TurnRight", 1, "TurnLeft");
		TNT1 A 0 A_JumpIfInventory("TurnLeft", 1, "TurnRight");
		
		HTNH A 0 A_SpawnItemEx ("HeavyTankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
//		TNT1 A 0 ThrustThing(heavytankbasedirection*256/360+128, 1, 1);
		TNT1 A 0 {HVA = SpawnHeavyTankHull("HeavyTankHull");}
		TNT1 A 0 A_JumpIF(velz < 0, "Falling");
		Goto CheckIfStillMoves;
		
		
	Falling:
		TNT1 A 0;
		TNT1 A 0 A_CheckFloor("CheckIfStillMoves");
	
	FallingForReal:
		TNT1 A 0;
		HTNH A 1 {
				 A_SpawnItemEx ("HeavyTankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
				 {HVA = SpawnHeavyTankHull("HeavyTankHull");}
				 A_SpawnItemEx ("HeavyTankTreads_01" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
				 }
		TNT1 A 0 A_JumpIF(velz == 0, "CrashIntoGround");
		TNT1 A 0 A_GiveInventory("VehicleFallingCount", 1);
		Loop;
		
	CrashIntoGround:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfinventory("VehicleFallingCount", 6, "CrashIntoGroundViolently");
		HTNH A 1 {
				 A_SpawnItemEx ("HeavyTankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
				 {HVA = SpawnHeavyTankHull("HeavyTankHull");}
				 A_SpawnItemEx ("HeavyTankTreads_01" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
				 }
		TNT1 A 0 A_StopSound(5);
		TNT1 A 0 A_SpawnItem("CrashTankIntotheGround1");
		TNT1 A 0 A_SpawnItem("CrashTankIntotheGround2");
		TNT1 A 0 A_SpawnItemEx ("LargeMassWaterImpact", 0, 0, -10);
//		TNT1 A 0 Radius_Quake(1, 6, 0, 4, 0);
//		TNT1 A 0 A_PlaySound("EBIKEBNC", 2);
		TNT1 A 0 A_TakeInventory("VehicleFallingCount", 100);
		Goto Stay;
		
	CrashIntoGroundViolently:
		TNT1 A 0;
		HTNH A 1 {
				 A_SpawnItemEx ("HeavyTankTurret" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
				 {HVA = SpawnHeavyTankHull("HeavyTankHull");}
				 A_SpawnItemEx ("HeavyTankTreads_01" , 0, 0, 0, 0, 0, 0, heavytankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
				 }
		TNT1 A 0 A_StopSound(5);
		TNT1 A 0 A_SpawnItem("CrashTankIntotheGround1");
		TNT1 A 0 A_SpawnItem("CrashTankIntotheGround2");
		
		TNT1 A 0 A_SpawnItemEx ("ExplosionSplashSpawner", 0, 0, -10);
		
//		TNT1 A 0 Radius_Quake(8, 24, 0, 4, 0);
//		TNT1 A 0 A_PlaySound("BIKECLW", 1);
//		TNT1 A 0 A_PlaySound("EBIKECLS", 2);
		TNT1 AAAA 0 A_CustomMissile ("ExplosionSmoke", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 A 0 A_TakeInventory("VehicleFallingCount", 100);
		TNT1 A 0 A_SetPitch(-8.0 + pitch);
		HTNH A 1 ;
		TNT1 A 0 {HVA = SpawnHeavyTankHull("HeavyTankHull");}
		TNT1 A 0 A_SetPitch(4.0 + pitch);
		HTNH A 1;
		TNT1 A 0 {HVA = SpawnHeavyTankHull("HeavyTankHull");}
		TNT1 A 0 A_SetPitch(4.0 + pitch);
		Goto Stay;
		
		
		
	Death:	
	XDeath:
	TNT1 A 0 ACS_ExecuteAlways(871, 0, 0, 0, 0);
    TNT1 A 1;
	TNT1 A 0 A_SpawnItem("BigExplosion1112");
	TNT1 A 0 A_PlaySound("weapons/explode");
	TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
	TNT1 A 0 A_Scream;
	TNT1 A 0 A_NoBlocking;
	NULL AAAAAA 0 A_CustomMissile ("MetalShard1", 96, 0, random (0, 360), 2, random (0, 180));
	NULL AAAAAA 0 A_CustomMissile ("MetalShard2", 96, 0, random (0, 360), 2, random (0, 180));
	NULL AAAAAAAAA 0 A_CustomMissile ("GlassShard", 96, 0, random (0, 360), 2, random (0, 360));
	ELEC A 0 A_Explode(100, 250);
//	TNT1 A 0 A_SpawnItem("DestroyedArmouredVehicle");
	8762 A 5;
	TNT1 A 0 A_TakeInventory("HeavyTankGun", 1);
	8762 A 100;
	8762 A -1;
	Stop;
	
	
	}
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Vehicle's weapons and misc
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



Class HeavyTankReady : Ammo
{
	default
   {
   Inventory.Amount 0;
   Inventory.MaxAmount 100;
   Ammo.BackpackAmount 0;
   Ammo.BackpackMaxAmount 100;
//   Inventory.Icon TNT1A0;
   }
}

Class HeavyTankGun : Weapon
{
	default
	{
//	Game Doom;
	Weapon.SelectionOrder 1900;
	Weapon.AmmoUse1 0;
	Weapon.AmmoGive1 0;
	Weapon.AmmoUse2 0;
	Weapon.AmmoGive2 0;
	Weapon.AmmoType2 "HeavyTankMachinegunAmmo";
	Weapon.AmmoType1 "HeavyTankAmmo";
	Obituary "$OB_MPPISTOL";
	+WEAPON.AMMO_OPTIONAL;
	+WEAPON.ALT_AMMO_OPTIONAL;
	//+WEAPON.NOAUTOFIRE;
	Inventory.Pickupmessage "$PICKUP_PISTOL_DROPPED";
	Tag "$TAG_PISTOL";
	}
	
		
	
	action void A_FireHeavyTankMainGun()
	{
		A_StartSound("HVYTKGUN", 4, 0, 1, 0);
        A_TakeInventory("HeavyTankAmmo", 1);
        A_FireProjectile("HeavyTankShell", 0, 1, 0, 15);
		A_SpawnItemEx("TankFireEffekt",xofs:540,yofs:0,zofs:45,flags:SXF_NOCHECKPOSITION);	
        ACS_NamedExecuteAlways("Show HeavyTank_Hud", 0, 0, 0, 0);//SHOWHUD;
	}
	
	
/*	
	action void A_FireHeavyTankMachinegun()
	{
		A_StartSound("HTANKMCH", CHAN_ITEM, CHANF_LOOPING, 1 , ATTN_NONE);
		ACS_NamedExecuteAlways("Show HeavyTank_Hud", 0, 0, 0, 0);
		A_FireCustomMissile("YellowFlareSpawn",0,0,0,0);
		A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 0, 0, 0);
		A_TakeInventory("HeavyTankMachineGunAmmo", 1);
		A_FireProjectile("HeavyTankBullet", angle:frandom(-0.75,0.75), 0, 0, spawnheight:20, FPF_NOAUTOAIM,pitch:frandom(-0.75,0.75));
		A_SpawnItemEx("PlayerMuzzle2", 0, 0, -260);
		A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 0, 0, 0);
		A_TakeInventory("HeavyTankMachineGunAmmo", 1);
		A_FireProjectile("HeavyTankBullet", angle:frandom(-1.53,1.53), 0, 0, spawnheight:20, FPF_NOAUTOAIM, pitch:frandom(-1.53,1.53));
		A_SpawnItemEx("PlayerMuzzle2", 0, 0, -460);		
	}
*/	
	
	int recharge;

    override void DoEffect() {
    super.DoEffect();
    if (!owner || !owner.player) //double-check that owner exists and its a player
      return; //do nothing otherwise
    if (level.isFrozen())
      return; //do nothing if level is frozen
    if (recharge > 0) 
      recharge--; // if recharge is above 0, reduce it by 1 every tick
  
  }

	States
	{
	
	
	
	Ready:
	    TNT1 A 0;
		//TNT1 A 0 A_JumpIfInventory("PressedJump", 1, "ZoomMode")
		TNT1 A 1 {
      if (invoker.recharge > 0) //block primary fire if recharge timer is over 0
				A_WeaponReady(WRF_NOPRIMARY);
			else
				A_WeaponReady(WRF_NOBOB);
				}
		TNT1 A 0{
				 A_stopSound(3);
				 A_GiveInventory("HeavyTankReady", 1);
	             ACS_NamedExecuteAlways("Show HeavyTank_Hud", 0, 0, 0, 0);//SHOWHUD
				 A_JumpIf (pitch > 220, "TooHighCheck2");
				 A_JumpIf (pitch > 16, "TooLowCheck2");
				}
		Loop;
		
	ZoomMode:
		TNT1 A 1;
		TNT1 A 0 A_JumpIfinventory("TankZoom", 1, "StopZoom");
		TNT1 A 0 A_ZoomFactor(5.0);
		TNT1 A 0 A_GiveInventory("TankZoom");
		TNT1 A 10;
		TNT1 A 0 A_TakeInventory("PressedJump", 1);
		Goto Ready;
	
	StopZoom:
		TNT1 A 1;
		TNT1 A 0 A_ZoomFactor(1.0);
		TNT1 A 0 A_TakeInventory("TankZoom", 1);
		TNT1 A 10;
		TNT1 A 0 A_TakeInventory("PressedJump", 1);
		Goto Ready;
		
	NotReady:
		TNT1 A 1 A_GiveInventory("HeavyTankReady", 1);
		TNT1 A 0 ACS_NamedExecuteAlways("Show HeavyTank_Hud", 0, 0, 0, 0);//SHOWHUD
		Goto Ready;
		
	Deselect:
		TNT1 A 1 A_Lower;
		TNT1 A 0 A_ZoomFactor(1.0);
		TNT1 A 0 SetPlayerProperty(0,0,4);
		Loop;
	Select:
		TNHD AA 0 A_Raise;
		TNT1 A 0 SetPlayerProperty(0,1,4);
		TNT1 A 1 A_TakeInventory("PressedUse", 1);
		TNT1 A 1 A_TakeInventory("PressedJump", 2);
		TNHD A 1 A_Raise;
		TNT1 A 1 A_TakeInventory("PressedJump", 2);
		TNT1 A 0;
		Goto Ready;
	Fire:
		TNT1 A 1 {
      if (invoker.recharge > 0) //just in case, double-check that recharge timer is NOT over 0
					return ResolveState("Ready");
						invoker.recharge = 200;
				  return ResolveState(null);
				}
		TNT1 A 0{
					 A_StartSound("HVYTKGUN", 4, 0, 1, 0);
                     A_TakeInventory("HeavyTankAmmo", 1);
                     A_FireProjectile("HeavyTankShell", 0, 1, 0, 15);
                     A_FireProjectile("TankFireEffect", 0, 1, 0, 15);
                     ACS_NamedExecuteAlways("Show HeavyTank_Hud", 0, 0, 0, 0);//SHOWHUD;	
					 }
		Goto Ready;

	NoAmmo:
		TNT1 A 2;
		Goto Ready ;
		
	AltFire:

		TNT1 A 0 A_JumpIfInventory("HeavyTankMachinegunAmmo", 1, 1);
		Goto NoAmmo;
			
			TNT1 A 2 {
					A_StartSound("HTANKMCH", CHAN_ITEM, CHANF_LOOPING, 1 , ATTN_NONE);
					ACS_NamedExecuteAlways("Show HeavyTank_Hud", 0, 0, 0, 0);
					A_FireCustomMissile("YellowFlareSpawn",0,0,0,0);
					A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 0, 0, 0);
					A_TakeInventory("HeavyTankMachineGunAmmo", 1);
					A_FireProjectile("HeavyTankBullet", angle:frandom(-0.75,0.75), 0, 0, spawnheight:20, FPF_NOAUTOAIM,pitch:frandom(-0.75,0.75));
					A_SpawnItemEx("PlayerMuzzle2", 0, 0, -260);
					A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 0, 0, 0);
					A_TakeInventory("HeavyTankMachineGunAmmo", 1);
					A_FireProjectile("HeavyTankBullet", angle:frandom(-1.53,1.53), 0, 0, spawnheight:20, FPF_NOAUTOAIM, pitch:frandom(-1.53,1.53));
					A_SpawnItemEx("PlayerMuzzle2", 0, 0, -460);		
		}

		Goto Ready;
		
		
	
	TooHigh2:
		TNT1 A 0 A_SetPitch(326);
		Goto Ready;
		
	
	TooLowCheck2:
		//NULL A 0 A_JumpIf (pitch > 180, "TooHighCheck1");
		TNT1 A 0 A_SetPitch(16);
		Goto Ready;
		
		
	TooHighCheck2:
		TNT1 A 0;
		NULL A 0 A_JumpIf (pitch < 325, "TooHigh2");
		Goto Ready;
	
	
	
	TooHigh:
		TNT1 A 0 A_SetPitch(326);
		Goto Flash;
		
	
	TooLowCheck1:
		//NULL A 0 A_JumpIf (pitch > 180, "TooHighCheck1");
		TNT1 A 0 A_SetPitch(16);
		Goto Flash;
		
	TooHighCheck1:
		TNT1 A 0;
		NULL A 0 A_JumpIf (pitch < 325, "TooHigh");
		Goto Flash;
	
	
	Flash:
		TNT1 A 1;
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "LightEnd");
		NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck1");
		NULL A 0 A_JumpIf (pitch > 16, "TooLowCheck1");
		TNT1 A 1;
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "LightEnd");
		NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck1");
		NULL A 0 A_JumpIf (pitch > 16, "TooLowCheck1");
		TNT1 A 1;
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "LightEnd");
		NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck1");
		NULL A 0 A_JumpIf (pitch > 16, "TooLowCheck1");
		Stop;
	
	LightEnd:
		TNT1 A 2;
		Stop;
		
	Spawn:
		LAUN A -1;
		Stop;
		
	}
}

Class HeavyTankMainGun : Inventory
{
	default{
	inventory.maxamount 1;
	}
}



Class HeavyTankGunAmmo : Ammo
{
	default{
//	Game Doom;
	Inventory.PickupMessage "Picked up a heavy rounds.";
	Inventory.Amount 800;
	Inventory.MaxAmount 800;
	Ammo.BackpackAmount 0;
	Ammo.BackpackMaxAmount 800;
	Inventory.Icon "NULL";
	}
	States
	{
	Spawn:
		CLIP A -1;
		Stop;
	}
}

Class HeavyTankMachinegunAmmo : Ammo
{
	default{
//	Game Doom;
	Inventory.PickupMessage "Picked up a Missiles.";
	Inventory.Amount 4000;
	Inventory.MaxAmount 4000;
	Ammo.BackpackAmount 0;
	Ammo.BackpackMaxAmount 4000;
	Inventory.Icon "NULL";
	}
	States
	{
	Spawn:
		CLIP A -1;
		Stop;
	}
}


Class HeavyTankTreadsDamage : Actor
{
	default{
	+NOTARGET;
	Radius 1;
	Height 1;
	+NOGRAVITY;
	+NOTELEPORT;
	+NODAMAGETHRUST;
	+THRUGHOST;
	+NORADIUSDMG;
	+FORCERADIUSDMG;
	PROJECTILE;
	+DEHEXPLOSION;
	+ACTIVATEMCROSS;
	+EXPLODEONWATER;
	}
States
{
Spawn:
TNT1 A 0;
TNT1 A 0 A_Explode(5,50,0,damagetype:"Treads");
TNT1 A 0 A_SpawnItemEx("HeavyTankTreadsDamage2", 0, 50);
TNT1 A 0 A_SpawnItemEx("HeavyTankTreadsDamage2", 0, -50);
TNT1 A 0 A_SpawnItemEx("HeavyTankTreadsDamage3", 0, 50, 70);
TNT1 A 0 A_SpawnItemEx("HeavyTankTreadsDamage3", 0, -50, 70);
TNT1 A 0 A_SpawnItemEx("HeavyTankTreadsDamage3", 0, 0, 70);
TNT1 A 1 A_Noblocking;
PLAY A 0;
Stop;
 }
}


Class HeavyTankTreadsDamage2: HeavyTankTreadsDamage
{
States
{
Spawn:
TNT1 A 0;
TNT1 A 0 A_Explode(5,50,0,damagetype:"Treads");
PLAY A 0;
TNT1 A 1 A_Noblocking;
Stop;
 }
}


Class HeavyTankTreadsDamage3: HeavyTankTreadsDamage
{
States
{
Spawn:
TNT1 A 0;
TNT1 A 0 A_Explode(4,30,0,damagetype:"Treads");
PLAY A 0;
TNT1 A 1 A_Noblocking;
Stop;
 }
}

Class HeavyTankAmmo : Ammo
{
//	Game Doom
	Default{
//	SpawnID 11;
	Inventory.PickupMessage "Picked up a Magazine.";
	Inventory.Amount 10;
	Inventory.MaxAmount 100;
	Ammo.BackpackAmount 0;
	Ammo.BackpackMaxAmount 100;
	Inventory.Icon "TNT1A0";
	}
	States
	{
	Spawn:
		CLIP A -1;
		Stop;
	}
}


Class HeavyTankShell : fastprojectile
{
	Default{
	Radius 4;
	Height 4;
	Speed 260;
	Damagefunction (random (700, 900));
	Projectile;
	+RANDOMIZE;
	+DEHEXPLOSION;
	+ROCKETTRAIL;
	+MISSILE;
//	-NOGRAVITY;
	damagetype "TankShell";
//	Gravity 0.1;
//	SeeSound "weapons/rocklf";
//	DeathSound "weapons/rocklx";
	Obituary "$OB_MPROCKET";
	}
	States
	{
	Spawn:
		MISL A 1 Bright;
		Loop;
	Death:
		MISL B 0 Bright A_Explode;
		TNT1 A 0 A_SpawnItem("HeavyTankExplosionImpact");
		TNT1 A 0 A_StartSound("HVYEXPL", 0, 0, 1, 0);
		TNT1 A 0 A_SpawnItemEx ("ExplosionSplashSpawner", 0, 0, -20);
		TNT1 A 0 A_SpawnItemEx ("BarrelKaboom",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
        TNT1 A 0 A_SpawnItemEx ("DetectFloorCrater",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
	    TNT1 A 0 A_SpawnItemEx ("DetectCeilCrater",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
	    TNT1 A 0 A_SpawnItemEx ("UnderwaterExplosion",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
        TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);

        TNT1 AAAAAAAAA 0 A_CustomMissile ("ExplosionParticleHeavy", 0, 0, random (0, 360), 2, random (0, 180));
        TNT1 AAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("ExplosionParticleHeavy", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAAAAAAAA 0 A_CustomMissile ("ExplosionParticleVeryFast", 0, 0, random (0, 360), 2, random (0, 360));
        TNT1 AAAAA 0 A_CustomMissile ("MediumExplosionFlames", 0, 0, random (0, 360), 2, random (0, 360));
        //EXPL AAAAA 0 A_CustomMissile ("ExplosionSmoke22", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 A 6;
//		TNT1 A 0 A_PlaySound("FAREXPL", 1);
		TNT1 A 12;
		Stop;
	}
}

Class HeavyTankExplosionImpact : Actor
{
	Default{
	damagetype "ExplosiveImpact";
	+MISSILE;
	+NOCLIP;
	}
	States
	{
	Spawn:
		TNT1 A 1;
		TNT1 A 0 A_Explode(300, 500);
		Stop;
	}
}

Class HeavyTankBullet: FastProjectile
{
default{
	+CLIENTSIDEONLY;
	Projectile;
	+RANDOMIZE;
	+FORCEXYBILLBOARD;
	+DONTSPLASH;
	//+BLOODSPLATTER ;
	+NOEXTREMEDEATH;
	damagefunction 13;
	radius 2;
	height 2;
	speed 440;
	renderstyle "ADD";
	alpha 0.9;
	scale .15;
	damagetype "HeavyTankMachineGun";
	}
		states
		{
		Spawn:
			TRAC A 1 ;
			Loop;
		Death:
			TNT1 AAAAAAAAAA 0 A_CustomMissile ("SparkX", 2, 0, random (0, 360), 2, random (0, 360));
			TNT1 A 0 A_SpawnItemEx ("RicoChet",0,0,-5,0,0,0,0,SXF_NOCHECKPOSITION,0);
			TNT1 AAAA 0;
			TNT1 A 0 A_PlaySound("ricochet/hit");
			Stop;
		XDeath:
			TNT1 A 0;
			Stop;
		}
	
}

Class HeavyMachineGunPuff : fastprojectile
{
  Default{
  renderstyle "Translucent";
  alpha 0.4;
  Scale 1.5;
  radius 0;
  height 0;
  +NOBLOCKMAP;
  +NOGRAVITY;
  Gravity 0.01;
  +NOEXTREMEDEATH;
  +FORCEXYBILLBOARD;
  +THRUACTORS;
  +NOCLIP;
  +DONTSPLASH;
  -EXPLODEONWATER;
  PainChance 0;
  DamageType "CutLess";
  Decal "BulletDecalNew1";
  }

  states
  {
  Spawn:
    TNT1 A 0;
	//TNT1 AAAAAAAAAA 0 A_CustomMissile ("SparkX", 2, 0, random (0, 360), 2, random (0, 360));
    TNT1 A 0 A_SpawnItemEx ("RicoChet_Lite",0,0,-5,0,0,0,0,SXF_NOCHECKPOSITION,0);
    TNT1 A 0 A_PlaySound("ricochet/hit");
  Melee:
	TNT1 AAA 0 A_CustomMissile ("OldschoolRocketSmokeTrail2", 2, 0, random (0, 360), 2, random (0, 360));
	stop;
  }
}

/*
Class TankStep: FootStep
{
    Damage (random (4, 5))
    -CLIENTSIDEONLY
	-DONTSPLASH
	-EXPLODEONWATER
	-THRUACTORS
	mass 500
	Height 12
	Radius 8
	Scale 0.7
	Renderstyle Translucent
	Alpha 0.2
	States
		{
		Spawn:
			TNT1 A 0
			TNT1 A 1 //A_Explode(10,4,0)
			TNT1 A 4
			Stop
        Death:
            NULL A 0
			TNT1 A 0 ACS_ExecuteAlways(374)//Check Floortype
			TNT1 A 2
			TNT1 A 0 A_JumpIfInventory("IsOverSand", 1, "Sand")
			TNT1 A 0 A_JumpIfInventory("IsOverWater", 1, "XDeath")
			TNT1 A 0 A_JumpIfInventory("IsOverSlime", 1, "XDeath")
			TNT1 A 0 A_JumpIfInventory("IsOverSludge", 1, "XDeath")
			TNT1 A 0 A_JumpIfInventory("IsOverNukage", 1, "XDeath")
			TNT1 A 0 A_JumpIfInventory("IsOverLava", 1, "XDeath")
			TNT1 A 0 A_playsound("floorhard")
			TNT1 A 1
			TNT1 A 6
            Stop
	
		Sand:
			TNT1 A 0
			TNT1 A 0 A_CustomMissile ("SandDustSmall", 32, -32, random (0, 360), 2, random (30, 150))
			TNT1 A 0 A_CustomMissile ("SandDustSmall", 32, 32, random (0, 360), 2, random (30, 150))
			TNT1 A 0 A_CustomMissile ("SandCloudShort", 2, 32, random (0, 360), 2, random (60, 90))
			TNT1 A 0 A_CustomMissile ("SandCloudShort", 2, -32, random (0, 360), 2, random (60, 90))
			NULL A 300
			NULL AAAA 50 A_FadeOut(0.05)
			Stop
			
		
		XDeath:
            TNT1 A 1
			TNT1 A 1
			TNT1 A 6
            Stop	
			
			}
}
*/